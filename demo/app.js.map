{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./demo/app.ts","webpack:///./node_modules/ts-tree/build/Tree.js","webpack:///./src/View.ts","webpack:///./src/Controller.ts","webpack:///./src/Model.ts","webpack:///./node_modules/ts-pubsub/build/PubSub.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ts_tree_1","View_1","Model_1","tree","Tree","model","Model","a","b","outputEl","document","getElementById","View","v","text","createTextNode","toString","containerEl","createElement","appendChild","addEventListener","e","newValue","prompt","setValue","parseInt","[object Object]","children","this","_children","child","remove","_parent","json","map","fromJSON","length","toJSON","parent","root","nextSibling","indexOf","previousSibling","firstChild","lastChild","previous","lastDescendant","next","parentNext","newTree","insertAfter","insertBefore","removeChild","undefined","reference","index","splice","that","thisAncestors","ancestors","thatAncestors","minLength","Math","min","thisAncestor","thatAncestor","lowestCommonAncestor","siblings","isChildOf","fn","sort","_","clone","childrenBefore","childrenAfter","descendants","Controller_1","valueToHtmlEl","rootUlEl","cursorEl","treeToHtmlEl","Map","htmlElToTree","handleModelEvent","type","getParentEl","createTreeEl","getNextSiblingEl","removeTreeEl","getHtmlEl","classList","add","controller","Controller","bindModel","bindController","subscribe","emitAllInserts","unsubscribe","unbind","result","Error","el","target","Node","current","parentNode","HTMLElement","treeEl","childrenContainerEl","set","delete","childNodes","isMac","navigator","platform","toUpperCase","view","handleMousedownEvent","targetTree","getTarget","clickedEl","setAttribute","ctrlKey","metaKey","selectToggle","shiftKey","selectUntil","isSelected","selectOne","handleMouseupEvent","removeAttribute","handleClickEvent","resetSelection","handleKeyboardEvent","preventDefault","selectAll","copy","paste","selectPrev","selectNext","selectedSubtrees","handleDragstartEvent","dataTransfer","setData","dropEffect","mirrorEl","subtree","subtreeEl","cloneNode","body","setDragImage","handleDragenterEvent","dragoverTree","isLeaf","handleDragendEvent","insertAllIn","removeEventListener","ts_pubsub_1","clipboard","selection","Set","pubsub","PubSub","emitTree","sortedSelection","isBefore","last","node","push","has","size","isOnlySelected","removeFromSelection","addToSelection","setCursor","ensureValidCursor","cursor","unselect","end","trees","insertAllAfter","removeAll","setValueOf","filter","reverse","firstLarger","find","emit","first","values","done","handlers","event"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Tree } from \"ts-tree\";\nimport { View } from \"../src/View\";\nimport { Model } from \"../src/Model\";\n\nconst tree = new Tree(1, [\n\tnew Tree(2, [new Tree(3, [new Tree(4)])]),\n\tnew Tree(5),\n\tnew Tree(6),\n\tnew Tree(7)\n]);\n\nconst tree2 = new Tree(9, [new Tree(10)]);\n\nconst model = new Model<number>(tree, t => false, (a, b) => (a < b ? -1 : a > b ? 1 : 0));\nconst toHtml = (v: number) => {\n\tconst text = document.createTextNode(v.toString());\n\tconst containerEl = document.createElement(\"div\");\n\tcontainerEl.appendChild(text);\n\treturn containerEl;\n};\nconst outputEl = document.getElementById(\"output\") as HTMLElement;\nconst view = new View<number>(model, toHtml, outputEl);\nview.bind();\n\nconst changeValueButton = document.getElementById(\"change-value\") as HTMLElement;\nchangeValueButton.addEventListener(\"click\", e => {\n\tconst newValue = prompt(\"Please enter a new value\");\n\tif (newValue) {\n\t\tmodel.setValue(parseInt(newValue));\n\t}\n});","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Tree {\n    constructor(value, children = []) {\n        this.value = value;\n        this._children = children;\n        for (const child of children) {\n            child.remove();\n            child._parent = this;\n        }\n    }\n    static fromJSON(json) {\n        return new Tree(json.value, (json.children || []).map(Tree.fromJSON));\n    }\n    toJSON() {\n        if (this._children.length > 0) {\n            return {\n                value: this.value,\n                children: this._children.map(child => child.toJSON())\n            };\n        }\n        return { value: this.value };\n    }\n    get children() {\n        return this._children;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get root() {\n        return this._parent ? this._parent.root : this;\n    }\n    get nextSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) + 1];\n    }\n    get previousSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) - 1];\n    }\n    get firstChild() {\n        return this._children[0];\n    }\n    get lastChild() {\n        return this._children[this._children.length - 1];\n    }\n    get previous() {\n        const previousSibling = this.previousSibling;\n        if (previousSibling)\n            return previousSibling.lastDescendant || previousSibling;\n        return this._parent;\n    }\n    get lastDescendant() {\n        const lastChild = this.lastChild;\n        if (lastChild)\n            return lastChild.lastDescendant || lastChild;\n    }\n    get next() {\n        return this.firstChild || this.nextSibling || this.parentNext;\n    }\n    get parentNext() {\n        if (this._parent)\n            return this._parent.nextSibling || this._parent.parentNext;\n    }\n    after(newTree) {\n        if (this._parent)\n            return this._parent.insertAfter(this, newTree);\n    }\n    before(newTree) {\n        if (this._parent)\n            return this._parent.insertBefore(this, newTree);\n    }\n    remove() {\n        if (this._parent)\n            return this._parent.removeChild(this);\n    }\n    appendChild(newTree) {\n        return this.insertBefore(undefined, newTree);\n    }\n    insertAfter(reference, newTree) {\n        return this.insertBefore(reference ? reference.nextSibling : this.firstChild, newTree);\n    }\n    insertBefore(reference, newTree) {\n        const index = reference ? this._children.indexOf(reference) : this._children.length;\n        if (index >= 0) {\n            newTree.remove();\n            this._children.splice(index, 0, newTree);\n            newTree._parent = this;\n            return newTree;\n        }\n    }\n    removeChild(child) {\n        const index = this._children.indexOf(child);\n        if (index >= 0) {\n            this._children.splice(index, 1);\n            child._parent = undefined;\n            return child;\n        }\n    }\n    isBefore(that) {\n        if (this === that)\n            return 0;\n        const thisAncestors = [...this.ancestors(), this];\n        const thatAncestors = [...that.ancestors(), that];\n        const minLength = Math.min(thisAncestors.length, thatAncestors.length);\n        for (let i = 0; i < minLength; ++i) {\n            const thisAncestor = thisAncestors[i];\n            const thatAncestor = thatAncestors[i];\n            if (thisAncestor !== thatAncestor) {\n                const lowestCommonAncestor = thisAncestors[i]._parent;\n                if (!lowestCommonAncestor)\n                    return 0;\n                const siblings = lowestCommonAncestor._children;\n                return siblings.indexOf(thisAncestor) < siblings.indexOf(thatAncestor) ? -1 : 1;\n            }\n        }\n        return thisAncestors.length < thatAncestors.length ? -1 : 1;\n    }\n    isChildOf(that) {\n        if (this.parent === that)\n            return true;\n        if (this.parent)\n            return this.parent.isChildOf(that);\n        return false;\n    }\n    sortChildren(fn) {\n        this._children.sort((a, b) => fn(a.value, b.value));\n    }\n    clone() {\n        return new Tree(this.value, this._children.map(_ => _.clone()));\n    }\n    *childrenAfter(reference) {\n        const length = this._children.length;\n        for (let i = this._children.indexOf(reference) + 1; i < length; ++i) {\n            yield this._children[i];\n        }\n    }\n    *childrenBefore(reference) {\n        for (let i = this._children.indexOf(reference) - 1; i >= 0; --i) {\n            yield this._children[i];\n        }\n    }\n    *previousSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenBefore(this);\n    }\n    *nextSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenAfter(this);\n    }\n    *descendants() {\n        for (const child of this._children) {\n            yield child;\n            yield* child.descendants();\n        }\n    }\n    *ancestors() {\n        if (this._parent) {\n            yield* this._parent.ancestors();\n            yield this._parent;\n        }\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=Tree.js.map","import { Tree } from \"ts-tree\";\nimport { Controller } from \"./Controller\";\nimport { Model } from \"./Model\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nexport class View<V> {\n\tprotected readonly controller: Controller<V>;\n\tprivate cursorEl: HTMLElement | null = null;\n\tprivate readonly treeToHtmlEl: Map<Tree<V>, HTMLElement> = new Map();\n\tprivate readonly htmlElToTree: Map<HTMLElement, Tree<V>> = new Map();\n\n\tconstructor(\n\t\tprotected readonly model: Model<V>,\n\t\tprotected readonly valueToHtmlEl: (v: V) => Node,\n\t\tprotected readonly rootUlEl: Node\n\t) {\n\t\tthis.controller = new Controller<V>(this, model);\n\t}\n\n\tbind() {\n\t\tthis.bindModel();\n\t\tthis.bindController();\n\t}\n\n\tbindModel() {\n\t\tthis.model.subscribe(this.handleModelEvent);\n\t\tthis.model.emitAllInserts(this.handleModelEvent);\n\t}\n\n\tunbindModel() {\n\t\tthis.model.unsubscribe(this.handleModelEvent);\n\t}\n\n\tbindController() {\n\t\tthis.controller.bind();\n\t}\n\n\tunbindController() {\n\t\tthis.controller.unbind();\n\t}\n\n\tgetHtmlEl(tree: Tree<V>): HTMLElement {\n\t\tconst result = this.treeToHtmlEl.get(tree);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetTree(el: HTMLElement): Tree<V> {\n\t\tconst result = this.htmlElToTree.get(el);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetTarget(e: Event): Tree<V> | undefined {\n\t\tif (e.target instanceof Node) {\n\t\t\tfor (let current: Node | null = e.target; current; current = current.parentNode) {\n\t\t\t\tif (current instanceof HTMLElement) {\n\t\t\t\t\tconst tree = this.htmlElToTree.get(current);\n\t\t\t\t\tif (tree) {\n\t\t\t\t\t\treturn tree;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleModelEvent = (e: ModelEvent<V>) => {\n\t\tswitch (e.type) {\n\t\t\tcase \"insert\": {\n\t\t\t\tconst parentEl = this.getParentEl(e.tree);\n\t\t\t\tparentEl.insertBefore(this.createTreeEl(e.tree), this.getNextSiblingEl(e.tree));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove\": {\n\t\t\t\tthis.removeTreeEl(e.tree);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"add-to-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.add(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove-from-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.remove(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"move-cursor\": {\n\t\t\t\tif (this.cursorEl) {\n\t\t\t\t\tthis.cursorEl.classList.remove(\"cursor\");\n\t\t\t\t}\n\t\t\t\tif (e.tree) {\n\t\t\t\t\tthis.cursorEl = this.getHtmlEl(e.tree);\n\t\t\t\t\tthis.cursorEl.classList.add(\"cursor\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.cursorEl = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprotected createTreeEl(tree: Tree<V>) {\n\t\tconst treeEl = document.createElement(\"li\");\n\t\ttreeEl.appendChild(this.valueToHtmlEl(tree.value));\n\t\tconst childrenContainerEl = document.createElement(\"ul\");\n\t\ttreeEl.appendChild(childrenContainerEl);\n\t\tthis.htmlElToTree.set(treeEl, tree);\n\t\tthis.treeToHtmlEl.set(tree, treeEl);\n\t\treturn treeEl;\n\t}\n\n\tprotected removeTreeEl(tree: Tree<V>) {\n\t\tconst treeEl = this.getHtmlEl(tree);\n\t\tthis.htmlElToTree.delete(treeEl);\n\t\tthis.treeToHtmlEl.delete(tree);\n\t\ttreeEl.remove();\n\t}\n\n\tprivate getNextSiblingEl(tree: Tree<V>): Node | null {\n\t\treturn tree.nextSibling ? this.getHtmlEl(tree.nextSibling) : null;\n\t}\n\n\tprivate getParentEl(tree: Tree<V>): Node {\n\t\treturn tree.parent ? this.getHtmlEl(tree.parent).childNodes[1] : this.rootUlEl;\n\t}\n}\n","import { Tree } from \"ts-tree\";\nimport { Model } from \"./Model\";\nimport { View } from \"./View\";\n\nconst isBrowser = typeof navigator === \"undefined\";\nconst isMac = isBrowser ? false : navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n\nexport class Controller<V> {\n\tprivate mirrorEl?: HTMLElement;\n\tprivate clickedEl?: HTMLElement;\n\tprivate dragoverTree?: Tree<V>;\n\tconstructor(readonly view: View<V>, readonly model: Model<V>) {}\n\n\tbind() {\n\t\tdocument.addEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.addEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.addEventListener(\"click\", this.handleClickEvent);\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.addEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.addEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.addEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tunbind() {\n\t\tdocument.removeEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.removeEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.removeEventListener(\"click\", this.handleClickEvent);\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.removeEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.removeEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.removeEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tprivate handleMousedownEvent = (e: MouseEvent) => {\n\t\tconst targetTree = this.view.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tthis.clickedEl = this.view.getHtmlEl(targetTree);\n\t\t\tthis.clickedEl.setAttribute(\"draggable\", \"true\");\n\n\t\t\t// If ctrl+shift are pressed, then default to calling it a ctrl\n\t\t\t// (MS defaults to shift, Dropbox to ctrl).\n\t\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t\tthis.model.selectToggle(targetTree);\n\t\t\t} else if (e.shiftKey) {\n\t\t\t\tthis.model.selectUntil(targetTree);\n\t\t\t} else {\n\t\t\t\tif (!this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleMouseupEvent = (e: MouseEvent) => {\n\t\tif (this.clickedEl) {\n\t\t\tthis.clickedEl.removeAttribute(\"draggable\");\n\t\t}\n\t\tconst targetTree = this.view.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tif (!e.ctrlKey && !e.metaKey && !e.shiftKey) {\n\t\t\t\tif (this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleClickEvent = (e: MouseEvent) => {\n\t\tif (!this.view.getTarget(e)) {\n\t\t\tthis.model.resetSelection();\n\t\t}\n\t};\n\n\tprivate handleKeyboardEvent = (e: KeyboardEvent) => {\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"a\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectAll();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.copy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.paste();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectPrev();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectNext();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.view.getHtmlEl(tree).classList.remove(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.view.getHtmlEl(tree).classList.add(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Delete\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.delete();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Backspace\":\n\t\t\t\t\tif (isMac) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.model.delete();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleDragstartEvent = (e: DragEvent) => {\n\t\te.dataTransfer.setData(\"text/html\", \"\");\n\t\te.dataTransfer.dropEffect = \"move\";\n\n\t\tconst target = this.view.getTarget(e);\n\t\tif (!target) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mirrorEl = document.createElement(\"ul\");\n\t\tthis.mirrorEl.classList.add(\"mirror\");\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tconst subtreeEl = this.view.getHtmlEl(subtree);\n\t\t\tthis.mirrorEl.appendChild(subtreeEl.cloneNode(true));\n\t\t}\n\t\tdocument.body.appendChild(this.mirrorEl);\n\t\te.dataTransfer.setDragImage(this.mirrorEl, 0, 0);\n\t};\n\n\tprivate handleDragenterEvent = (e: DragEvent) => {\n\t\tconst targetTree = this.view.getTarget(e);\n\t\tif (this.dragoverTree) {\n\t\t\tthis.view.getHtmlEl(this.dragoverTree).classList.remove(\"over\");\n\t\t\tthis.dragoverTree = undefined;\n\t\t}\n\t\tif (!targetTree || this.model.isLeaf(targetTree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tif (targetTree === subtree || targetTree.isChildOf(subtree)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.view.getHtmlEl(targetTree).classList.add(\"over\");\n\t\tthis.dragoverTree = targetTree;\n\t};\n\n\tprivate handleDragendEvent = (e: DragEvent) => {\n\t\tif (this.mirrorEl) {\n\t\t\tthis.mirrorEl.remove();\n\t\t}\n\t\tif (this.dragoverTree) {\n\t\t\tthis.model.insertAllIn(this.dragoverTree, ...this.model.selectedSubtrees);\n\t\t\tthis.view.getHtmlEl(this.dragoverTree).classList.remove(\"over\");\n\t\t\tthis.dragoverTree = undefined;\n\t\t}\n\t};\n}\n","import { PubSub } from \"ts-pubsub\";\nimport { Tree } from \"ts-tree\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nexport class Model<V> {\n\tprivate clipboard: Tree<V>[] = [];\n\tprivate selection: Set<Tree<V>> = new Set();\n\tprivate cursor?: Tree<V>;\n\tprivate pubsub: PubSub<ModelEvent<V>> = new PubSub();\n\n\tconstructor(\n\t\tprivate root: Tree<V>,\n\t\treadonly isLeaf: (tree: Tree<V>) => boolean,\n\t\treadonly sort?: (a: V, b: V) => number\n\t) {}\n\n\tsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.subscribe(fn);\n\t}\n\n\tunsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.unsubscribe(fn);\n\t}\n\n\temitAllInserts(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.emitTree(this.root, fn);\n\t}\n\n\tget sortedSelection() {\n\t\tconst result = [...this.selection];\n\t\tresult.sort((a, b) => a.isBefore(b));\n\t\treturn result;\n\t}\n\n\tget selectedSubtrees() {\n\t\tconst result = [];\n\t\tlet last: Tree<V> | null = null;\n\t\tfor (const node of this.sortedSelection) {\n\t\t\tif (!last || !node.isChildOf(last)) {\n\t\t\t\tresult.push(node);\n\t\t\t\tlast = node;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tisSelected(tree: Tree<V>) {\n\t\treturn this.selection.has(tree);\n\t}\n\n\tisOnlySelected(tree: Tree<V>) {\n\t\treturn this.selection.size === 1 && this.selection.has(tree);\n\t}\n\n\tselectOne(tree?: Tree<V>) {\n\t\tif (tree && this.isOnlySelected(tree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tif (!tree) {\n\t\t\tthis.ensureValidCursor();\n\t\t\treturn;\n\t\t}\n\t\tthis.addToSelection(tree);\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectPrev() {\n\t\tif (this.cursor && this.cursor.previous) {\n\t\t\tthis.selectOne(this.cursor.previous);\n\t\t}\n\t}\n\n\tselectNext() {\n\t\tif (this.cursor && this.cursor.next) {\n\t\t\tthis.selectOne(this.cursor.next);\n\t\t}\n\t}\n\n\tselectToggle(tree: Tree<V>) {\n\t\tif (this.selection.has(tree)) {\n\t\t\tthis.unselect(tree);\n\t\t} else {\n\t\t\tthis.addToSelection(tree);\n\t\t\tthis.setCursor(tree);\n\t\t}\n\t}\n\n\tselectUntil(tree: Tree<V>) {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tconst isBefore = tree.isBefore(this.cursor) < 0;\n\t\tlet current: Tree<V> | undefined = isBefore ? tree : this.cursor.next;\n\t\tconst end: Tree<V> | undefined = isBefore ? this.cursor : tree.next;\n\t\twhile (current && current !== end) {\n\t\t\tthis.addToSelection(current);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectAll() {\n\t\tfor (let current: Tree<V> | undefined = this.root; current; current = current.next) {\n\t\t\tthis.addToSelection(current);\n\t\t}\n\t}\n\n\tresetSelection() {\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t}\n\n\tunselect(target: Tree<V>) {\n\t\tthis.removeFromSelection(target);\n\t\tthis.ensureValidCursor();\n\t}\n\n\tcopy(): void {\n\t\tthis.clipboard = this.selectedSubtrees.map(t => t.clone());\n\t}\n\n\tpaste(): void {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllIn(this.cursor, ...this.clipboard.map(t => t.clone()));\n\t}\n\n\tinsertAll(...trees: Tree<V>[]) {\n\t\tif (this.cursor) {\n\t\t\treturn this.insertAllIn(this.cursor, ...trees);\n\t\t}\n\t}\n\n\tinsertAllIn(target: Tree<V>, ...trees: Tree<V>[]) {\n\t\tconst isLeaf = this.isLeaf(target);\n\t\tconst parent = isLeaf ? target.parent : target;\n\t\tconst previousSibling = isLeaf ? target : undefined;\n\t\tif (!parent) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllAfter(parent, previousSibling, ...trees);\n\t}\n\n\tdelete(): void {\n\t\tthis.removeAll(...this.selectedSubtrees);\n\t}\n\n\tsetValue(newValue: V) {\n\t\tif (this.cursor) {\n\t\t\treturn this.setValueOf(this.cursor, newValue);\n\t\t}\n\t}\n\n\tsetValueOf(tree: Tree<V>, newValue: V) {\n\t\tif (!tree.parent) {\n\t\t\treturn;\n\t\t}\n\t\ttree.value = newValue;\n\t\tthis.insertAllAfter(tree.parent, tree.previousSibling, tree);\n\t}\n\n\tinsertAllAfter(parent: Tree<V>, previousSibling: Tree<V> | undefined, ...trees: Tree<V>[]) {\n\t\tthis.removeAll(...trees.filter(tree => tree.root === this.root));\n\t\tfor (const tree of trees.reverse()) {\n\t\t\tif (this.sort) {\n\t\t\t\tconst sort = this.sort; // TS hack\n\t\t\t\tconst firstLarger = parent.children.find(\n\t\t\t\t\tchild => sort(child.value, tree.value) > 0\n\t\t\t\t);\n\t\t\t\tparent.insertBefore(firstLarger, tree);\n\t\t\t} else {\n\t\t\t\tparent.insertAfter(previousSibling, tree);\n\t\t\t}\n\t\t\tthis.pubsub.emit({ type: \"insert\", tree });\n\t\t\tthis.emitTree(tree.firstChild);\n\t\t}\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tremoveAll(...trees: Tree<V>[]) {\n\t\tfor (const tree of trees) {\n\t\t\tthis.removeFromSelection(tree);\n\t\t\ttree.remove();\n\t\t\tthis.pubsub.emit({ type: \"remove\", tree });\n\t\t}\n\t\tthis.ensureValidCursor();\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tprivate addToSelection(tree: Tree<V>) {\n\t\tif (!this.selection.has(tree)) {\n\t\t\tthis.selection.add(tree);\n\t\t\tthis.pubsub.emit({ type: \"add-to-selection\", tree });\n\t\t}\n\t}\n\n\tprivate removeFromSelection(tree: Tree<V>) {\n\t\tif (this.selection.delete(tree)) {\n\t\t\tthis.pubsub.emit({ type: \"remove-from-selection\", tree });\n\t\t}\n\t}\n\n\tprivate setCursor(tree?: Tree<V>) {\n\t\tif (tree !== this.cursor) {\n\t\t\tthis.pubsub.emit({ type: \"move-cursor\", tree });\n\t\t}\n\t\tthis.cursor = tree;\n\t}\n\n\tprivate ensureValidCursor() {\n\t\tif (this.cursor && this.cursor.root !== this.root) {\n\t\t\tconst first = this.selection.values().next();\n\t\t\tthis.setCursor(first.done ? undefined : first.value);\n\t\t} else {\n\t\t\tthis.setCursor(undefined);\n\t\t}\n\t}\n\n\tprivate emitTree(\n\t\ttree?: Tree<V>,\n\t\tfn: (e: ModelEvent<V>) => any = this.pubsub.emit.bind(this.pubsub)\n\t) {\n\t\tif (!tree) {\n\t\t\treturn;\n\t\t}\n\t\tthis.emitTree(tree.nextSibling, fn);\n\t\tfn({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild, fn);\n\t}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PubSub {\n    constructor() {\n        this.handlers = new Set();\n    }\n    subscribe(fn) {\n        this.handlers.add(fn);\n    }\n    unsubscribe(fn) {\n        this.handlers.delete(fn);\n    }\n    emit(event) {\n        for (const fn of this.handlers) {\n            fn(event);\n        }\n    }\n}\nexports.PubSub = PubSub;\n//# sourceMappingURL=PubSub.js.map"],"sourceRoot":""}