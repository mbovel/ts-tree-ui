{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./demo/app.ts","webpack:///./node_modules/ts-tree/build/Tree.js","webpack:///./src/HTMLView.ts","webpack:///./src/Model.ts","webpack:///./node_modules/ts-pubsub/build/PubSub.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ts_tree_1","HTMLView_1","model","Model","Tree","a","b","outputEl","document","getElementById","HTMLView","v","text","createTextNode","toString","containerEl","createElement","appendChild","addEventListener","e","newValue","prompt","changeValue","parseInt","[object Object]","children","this","_children","child","remove","_parent","json","map","fromJSON","length","toJSON","parent","root","nextSibling","indexOf","previousSibling","firstChild","lastChild","previous","lastDescendant","next","parentNext","newTree","insertAfter","insertBefore","removeChild","undefined","reference","index","splice","that","thisAncestors","ancestors","thatAncestors","minLength","Math","min","thisAncestor","thatAncestor","lowestCommonAncestor","siblings","isChildOf","fn","sort","_","clone","childrenBefore","childrenAfter","descendants","isMac","navigator","platform","toUpperCase","valueToHtmlEl","rootUlEl","treeToHtmlEl","Map","htmlElToTree","cursorEl","handleModelEvent","type","getParentEl","tree","createTreeEl","getNextSiblingEl","removeTreeEl","getHtmlEl","classList","add","handleMousedownEvent","targetTree","getTarget","clickedEl","setAttribute","ctrlKey","metaKey","selectToggle","shiftKey","selectUntil","isSelected","selectOne","handleMouseupEvent","removeAttribute","handleClickEvent","resetSelection","handleKeyboardEvent","preventDefault","selectAll","copy","paste","selectPrev","selectNext","selectedSubtrees","delete","handleDragstartEvent","dataTransfer","setData","dropEffect","mirrorEl","subtree","subtreeEl","cloneNode","body","setDragImage","handleDragenterEvent","dragoverTree","isLeaf","handleDragendEvent","insertAllIn","subscribe","unsubscribe","removeEventListener","target","Node","current","parentNode","HTMLElement","treeEl","childrenContainerEl","set","childNodes","result","Error","el","ts_pubsub_1","clipboard","selection","Set","pubsub","PubSub","emitTree","sortedSelection","isBefore","last","node","push","has","size","isOnlySelected","removeFromSelection","addToSelection","setCursor","ensureValidCursor","cursor","unselect","end","trees","insertAllAfter","reverse","emit","changeValueOf","firstLarger","find","first","values","done","handlers","event"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Tree } from \"ts-tree\";\nimport { HTMLView } from \"../src/HTMLView\";\nimport { Model } from \"../src/Model\";\n\nconst model = new Model<number>(\n\tnew Tree(1, [new Tree(2, [new Tree(3, [new Tree(4)])]), new Tree(5), new Tree(6), new Tree(7)]),\n\tt => false,\n\t(a, b) => (a < b ? -1 : a > b ? 1 : 0)\n);\nconst toHtml = (v: number) => {\n\tconst text = document.createTextNode(v.toString());\n\tconst containerEl = document.createElement(\"div\");\n\tcontainerEl.appendChild(text);\n\treturn containerEl;\n};\nconst outputEl = document.getElementById(\"output\") as HTMLElement;\nconst view = new HTMLView<number>(model, toHtml, outputEl);\n\nconst changeValueButton = document.getElementById(\"change-value\") as HTMLElement;\nchangeValueButton.addEventListener(\"click\", (e) => {\n\tconst newValue = prompt(\"Please enter a new value\");\n\tif (newValue) {\n\t\tmodel.changeValue(parseInt(newValue));\n\t}\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Tree {\n    constructor(value, children = []) {\n        this.value = value;\n        this._children = children;\n        for (const child of children) {\n            child.remove();\n            child._parent = this;\n        }\n    }\n    static fromJSON(json) {\n        return new Tree(json.value, (json.children || []).map(Tree.fromJSON));\n    }\n    toJSON() {\n        if (this._children.length > 0) {\n            return {\n                value: this.value,\n                children: this._children.map(child => child.toJSON())\n            };\n        }\n        return { value: this.value };\n    }\n    get children() {\n        return this._children;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get root() {\n        return this._parent ? this._parent.root : this;\n    }\n    get nextSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) + 1];\n    }\n    get previousSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) - 1];\n    }\n    get firstChild() {\n        return this._children[0];\n    }\n    get lastChild() {\n        return this._children[this._children.length - 1];\n    }\n    get previous() {\n        const previousSibling = this.previousSibling;\n        if (previousSibling)\n            return previousSibling.lastDescendant || previousSibling;\n        return this._parent;\n    }\n    get lastDescendant() {\n        const lastChild = this.lastChild;\n        if (lastChild)\n            return lastChild.lastDescendant || lastChild;\n    }\n    get next() {\n        return this.firstChild || this.nextSibling || this.parentNext;\n    }\n    get parentNext() {\n        if (this._parent)\n            return this._parent.nextSibling || this._parent.parentNext;\n    }\n    after(newTree) {\n        if (this._parent)\n            return this._parent.insertAfter(this, newTree);\n    }\n    before(newTree) {\n        if (this._parent)\n            return this._parent.insertBefore(this, newTree);\n    }\n    remove() {\n        if (this._parent)\n            return this._parent.removeChild(this);\n    }\n    appendChild(newTree) {\n        return this.insertBefore(undefined, newTree);\n    }\n    insertAfter(reference, newTree) {\n        return this.insertBefore(reference ? reference.nextSibling : this.firstChild, newTree);\n    }\n    insertBefore(reference, newTree) {\n        const index = reference ? this._children.indexOf(reference) : this._children.length;\n        if (index >= 0) {\n            newTree.remove();\n            this._children.splice(index, 0, newTree);\n            newTree._parent = this;\n            return newTree;\n        }\n    }\n    removeChild(child) {\n        const index = this._children.indexOf(child);\n        if (index >= 0) {\n            this._children.splice(index, 1);\n            child._parent = undefined;\n            return child;\n        }\n    }\n    isBefore(that) {\n        if (this === that)\n            return 0;\n        const thisAncestors = [...this.ancestors(), this];\n        const thatAncestors = [...that.ancestors(), that];\n        const minLength = Math.min(thisAncestors.length, thatAncestors.length);\n        for (let i = 0; i < minLength; ++i) {\n            const thisAncestor = thisAncestors[i];\n            const thatAncestor = thatAncestors[i];\n            if (thisAncestor !== thatAncestor) {\n                const lowestCommonAncestor = thisAncestors[i]._parent;\n                if (!lowestCommonAncestor)\n                    return 0;\n                const siblings = lowestCommonAncestor._children;\n                return siblings.indexOf(thisAncestor) < siblings.indexOf(thatAncestor) ? -1 : 1;\n            }\n        }\n        return thisAncestors.length < thatAncestors.length ? -1 : 1;\n    }\n    isChildOf(that) {\n        if (this.parent === that)\n            return true;\n        if (this.parent)\n            return this.parent.isChildOf(that);\n        return false;\n    }\n    sortChildren(fn) {\n        this._children.sort((a, b) => fn(a.value, b.value));\n    }\n    clone() {\n        return new Tree(this.value, this._children.map(_ => _.clone()));\n    }\n    *childrenAfter(reference) {\n        const length = this._children.length;\n        for (let i = this._children.indexOf(reference) + 1; i < length; ++i) {\n            yield this._children[i];\n        }\n    }\n    *childrenBefore(reference) {\n        for (let i = this._children.indexOf(reference) - 1; i >= 0; --i) {\n            yield this._children[i];\n        }\n    }\n    *previousSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenBefore(this);\n    }\n    *nextSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenAfter(this);\n    }\n    *descendants() {\n        for (const child of this._children) {\n            yield child;\n            yield* child.descendants();\n        }\n    }\n    *ancestors() {\n        if (this._parent) {\n            yield* this._parent.ancestors();\n            yield this._parent;\n        }\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=Tree.js.map","import { Tree } from \"ts-tree\";\nimport { Model } from \"./Model\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nconst isBrowser = typeof navigator === \"undefined\";\nconst isMac = isBrowser ? false : navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n\nexport class HTMLView<V> {\n\tprivate readonly treeToHtmlEl: Map<Tree<V>, HTMLElement> = new Map();\n\tprivate readonly htmlElToTree: Map<HTMLElement, Tree<V>> = new Map();\n\tprivate cursorEl: HTMLElement | null = null;\n\tprivate mirrorEl?: HTMLElement;\n\tprivate clickedEl?: HTMLElement;\n\tprivate dragoverTree?: Tree<V>;\n\n\tconstructor(\n\t\tprivate readonly model: Model<V>,\n\t\tprivate readonly valueToHtmlEl: (v: V) => Node,\n\t\tprivate readonly rootUlEl: Node\n\t) {\n\t\tthis.bind();\n\t}\n\n\tbind() {\n\t\tthis.model.subscribe(this.handleModelEvent);\n\t\tdocument.addEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.addEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.addEventListener(\"click\", this.handleClickEvent);\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.addEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.addEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.addEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tunbind() {\n\t\tthis.model.unsubscribe(this.handleModelEvent);\n\t\tdocument.removeEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.removeEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.removeEventListener(\"click\", this.handleClickEvent);\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.removeEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.removeEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.removeEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tprivate handleModelEvent = (e: ModelEvent<V>) => {\n\t\tswitch (e.type) {\n\t\t\tcase \"insert\": {\n\t\t\t\tconst parentEl = this.getParentEl(e.tree);\n\t\t\t\tparentEl.insertBefore(this.createTreeEl(e.tree), this.getNextSiblingEl(e.tree));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove\": {\n\t\t\t\tthis.removeTreeEl(e.tree);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"add-to-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.add(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove-from-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.remove(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"move-cursor\": {\n\t\t\t\tif (this.cursorEl) {\n\t\t\t\t\tthis.cursorEl.classList.remove(\"cursor\");\n\t\t\t\t}\n\t\t\t\tif (e.tree) {\n\t\t\t\t\tthis.cursorEl = this.getHtmlEl(e.tree);\n\t\t\t\t\tthis.cursorEl.classList.add(\"cursor\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.cursorEl = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleMousedownEvent = (e: MouseEvent) => {\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tthis.clickedEl = this.getHtmlEl(targetTree);\n\t\t\tthis.clickedEl.setAttribute(\"draggable\", \"true\");\n\n\t\t\t// If ctrl+shift are pressed, then default to calling it a ctrl\n\t\t\t// (MS defaults to shift, Dropbox to ctrl).\n\t\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t\tthis.model.selectToggle(targetTree);\n\t\t\t} else if (e.shiftKey) {\n\t\t\t\tthis.model.selectUntil(targetTree);\n\t\t\t} else {\n\t\t\t\tif (!this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleMouseupEvent = (e: MouseEvent) => {\n\t\tif (this.clickedEl) {\n\t\t\tthis.clickedEl.removeAttribute(\"draggable\");\n\t\t}\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tif (!e.ctrlKey && !e.metaKey && !e.shiftKey) {\n\t\t\t\tif (this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleClickEvent = (e: MouseEvent) => {\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (!this.getTarget(e)) {\n\t\t\tthis.model.resetSelection();\n\t\t}\n\t};\n\n\tprivate handleKeyboardEvent = (e: KeyboardEvent) => {\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"a\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectAll();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.copy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.paste();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectPrev();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectNext();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.getHtmlEl(tree).classList.remove(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.getHtmlEl(tree).classList.add(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Delete\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.delete();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Backspace\":\n\t\t\t\t\tif (isMac) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.model.delete();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleDragstartEvent = (e: DragEvent) => {\n\t\te.dataTransfer.setData(\"text/html\", \"\");\n\t\te.dataTransfer.dropEffect = \"move\";\n\n\t\tconst target = this.getTarget(e);\n\t\tif (!target) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mirrorEl = document.createElement(\"ul\");\n\t\tthis.mirrorEl.classList.add(\"mirror\");\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tconst subtreeEl = this.getHtmlEl(subtree);\n\t\t\tthis.mirrorEl.appendChild(subtreeEl.cloneNode(true));\n\t\t}\n\t\tdocument.body.appendChild(this.mirrorEl);\n\t\te.dataTransfer.setDragImage(this.mirrorEl, 0, 0);\n\t};\n\n\tprivate handleDragenterEvent = (e: DragEvent) => {\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (this.dragoverTree) {\n\t\t\tthis.getHtmlEl(this.dragoverTree).classList.remove(\"over\");\n\t\t\tthis.dragoverTree = undefined;\n\t\t}\n\t\tif (!targetTree || this.model.isLeaf(targetTree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tif (targetTree === subtree || targetTree.isChildOf(subtree)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.getHtmlEl(targetTree).classList.add(\"over\");\n\t\tthis.dragoverTree = targetTree;\n\t};\n\n\tprivate handleDragendEvent = (e: DragEvent) => {\n\t\tif (this.mirrorEl) {\n\t\t\tthis.mirrorEl.remove();\n\t\t}\n\t\tif (this.dragoverTree) {\n\t\t\tthis.model.insertAllIn(this.dragoverTree, ...this.model.selectedSubtrees);\n\t\t\tthis.getHtmlEl(this.dragoverTree).classList.remove(\"over\");\n\t\t\tthis.dragoverTree = undefined;\n\t\t}\n\t};\n\n\tprivate getTarget(e: Event): Tree<V> | undefined {\n\t\tif (e.target instanceof Node) {\n\t\t\tfor (let current: Node | null = e.target; current; current = current.parentNode) {\n\t\t\t\tif (current instanceof HTMLElement) {\n\t\t\t\t\tconst tree = this.htmlElToTree.get(current);\n\t\t\t\t\tif (tree) {\n\t\t\t\t\t\treturn tree;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createTreeEl(tree: Tree<V>) {\n\t\tconst treeEl = document.createElement(\"li\");\n\t\ttreeEl.appendChild(this.valueToHtmlEl(tree.value));\n\t\tconst childrenContainerEl = document.createElement(\"ul\");\n\t\ttreeEl.appendChild(childrenContainerEl);\n\t\tthis.htmlElToTree.set(treeEl, tree);\n\t\tthis.treeToHtmlEl.set(tree, treeEl);\n\t\treturn treeEl;\n\t}\n\n\tprivate removeTreeEl(tree: Tree<V>) {\n\t\tconst treeEl = this.getHtmlEl(tree);\n\t\tthis.htmlElToTree.delete(treeEl);\n\t\tthis.treeToHtmlEl.delete(tree);\n\t\ttreeEl.remove();\n\t}\n\n\tprivate getNextSiblingEl(tree: Tree<V>): Node | null {\n\t\treturn tree.nextSibling ? this.getHtmlEl(tree.nextSibling) : null;\n\t}\n\n\tprivate getParentEl(tree: Tree<V>): Node {\n\t\treturn tree.parent ? this.getHtmlEl(tree.parent).childNodes[1] : this.rootUlEl;\n\t}\n\n\tprivate getHtmlEl(tree: Tree<V>): HTMLElement {\n\t\tconst result = this.treeToHtmlEl.get(tree);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getNode(el: HTMLElement): Tree<V> {\n\t\tconst result = this.htmlElToTree.get(el);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n}\n","import { PubSub } from \"ts-pubsub\";\nimport { Tree } from \"ts-tree\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nexport class Model<V> {\n\tprivate clipboard: Tree<V>[] = [];\n\tprivate selection: Set<Tree<V>> = new Set();\n\tprivate cursor?: Tree<V>;\n\tprivate pubsub: PubSub<ModelEvent<V>> = new PubSub();\n\n\tconstructor(\n\t\treadonly root: Tree<V>,\n\t\treadonly isLeaf: (tree: Tree<V>) => boolean,\n\t\treadonly sort?: (a: V, b: V) => number\n\t) {}\n\n\tsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.subscribe(fn);\n\t\tthis.emitTree(this.root);\n\t}\n\n\tunsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.unsubscribe(fn);\n\t}\n\n\tget sortedSelection() {\n\t\tconst result = [...this.selection];\n\t\tresult.sort((a, b) => a.isBefore(b));\n\t\treturn result;\n\t}\n\n\tget selectedSubtrees() {\n\t\tconst result = [];\n\t\tlet last: Tree<V> | null = null;\n\t\tfor (const node of this.sortedSelection) {\n\t\t\tif (!last || !node.isChildOf(last)) {\n\t\t\t\tresult.push(node);\n\t\t\t\tlast = node;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tisSelected(tree: Tree<V>) {\n\t\treturn this.selection.has(tree);\n\t}\n\n\tisOnlySelected(tree: Tree<V>) {\n\t\treturn this.selection.size === 1 && this.selection.has(tree);\n\t}\n\n\tselectOne(tree?: Tree<V>) {\n\t\tif (tree && this.isOnlySelected(tree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tif (!tree) {\n\t\t\tthis.ensureValidCursor();\n\t\t\treturn;\n\t\t}\n\t\tthis.addToSelection(tree);\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectPrev() {\n\t\tif (this.cursor && this.cursor.previous) {\n\t\t\tthis.selectOne(this.cursor.previous);\n\t\t}\n\t}\n\n\tselectNext() {\n\t\tif (this.cursor && this.cursor.next) {\n\t\t\tthis.selectOne(this.cursor.next);\n\t\t}\n\t}\n\n\tselectToggle(tree: Tree<V>) {\n\t\tif (this.selection.has(tree)) {\n\t\t\tthis.unselect(tree);\n\t\t} else {\n\t\t\tthis.addToSelection(tree);\n\t\t\tthis.setCursor(tree);\n\t\t}\n\t}\n\n\tselectUntil(tree: Tree<V>) {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tconst isBefore = tree.isBefore(this.cursor) < 0;\n\t\tlet current: Tree<V> | undefined = isBefore ? tree : this.cursor.next;\n\t\tconst end: Tree<V> | undefined = isBefore ? this.cursor : tree.next;\n\t\twhile (current && current !== end) {\n\t\t\tthis.addToSelection(current);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectAll() {\n\t\tfor (let current: Tree<V> | undefined = this.root; current; current = current.next) {\n\t\t\tthis.addToSelection(current);\n\t\t}\n\t}\n\n\tresetSelection() {\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t}\n\n\tunselect(target: Tree<V>) {\n\t\tthis.removeFromSelection(target);\n\t\tthis.ensureValidCursor();\n\t}\n\n\tcopy(): void {\n\t\tthis.clipboard = this.selectedSubtrees.map(t => t.clone());\n\t}\n\n\tpaste(): void {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllIn(this.cursor, ...this.clipboard.map(t => t.clone()));\n\t}\n\n\tinsertAll(...trees: Tree<V>[]) {\n\t\tif (this.cursor) {\n\t\t\treturn this.insertAllIn(this.cursor, ...trees);\n\t\t}\n\t}\n\n\tinsertAllIn(target: Tree<V>, ...trees: Tree<V>[]) {\n\t\tconst isLeaf = this.isLeaf(target);\n\t\tconst parent = isLeaf ? target.parent : target;\n\t\tconst previousSibling = isLeaf ? target : undefined;\n\t\tif (!parent) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllAfter(parent, previousSibling, ...trees);\n\t}\n\n\tinsertAllAfter(parent: Tree<V>, previousSibling: Tree<V> | undefined, ...trees: Tree<V>[]) {\n\t\tfor (const tree of trees.reverse()) {\n\t\t\tif (tree.root === this.root) {\n\t\t\t\tthis.remove(tree);\n\t\t\t}\n\t\t\tthis.insertAfter(parent, previousSibling, tree);\n\t\t}\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tdelete(): void {\n\t\tfor (const tree of this.selectedSubtrees) {\n\t\t\tthis.remove(tree);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tchangeValue(newValue: V) {\n\t\tif (this.cursor) {\n\t\t\treturn this.changeValueOf(this.cursor, newValue);\n\t\t}\n\t}\n\n\tchangeValueOf(tree: Tree<V>, newValue: V) {\n\t\tconst parent = tree.parent;\n\t\tif (!parent) {\n\t\t\treturn;\n\t\t}\n\t\tthis.remove(tree);\n\t\ttree.value = newValue;\n\t\tthis.insertAllIn(parent, tree);\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tprivate insertAfter(parent: Tree<V>, reference: Tree<V> | undefined, tree: Tree<V>) {\n\t\tif (this.sort) {\n\t\t\tconst sort = this.sort; // TS hack\n\t\t\tconst firstLarger = parent.children.find(child => sort(child.value, tree.value) > 0);\n\t\t\tparent.insertBefore(firstLarger, tree);\n\t\t} else {\n\t\t\tparent.insertAfter(reference, tree);\n\t\t}\n\t\tthis.pubsub.emit({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild);\n\t}\n\n\tprivate remove(tree: Tree<V>) {\n\t\tthis.removeFromSelection(tree);\n\t\ttree.remove();\n\t\tthis.pubsub.emit({ type: \"remove\", tree });\n\t}\n\n\tprivate addToSelection(tree: Tree<V>) {\n\t\tif (!this.selection.has(tree)) {\n\t\t\tthis.selection.add(tree);\n\t\t\tthis.pubsub.emit({ type: \"add-to-selection\", tree });\n\t\t}\n\t}\n\n\tprivate removeFromSelection(tree: Tree<V>) {\n\t\tif (this.selection.delete(tree)) {\n\t\t\tthis.pubsub.emit({ type: \"remove-from-selection\", tree });\n\t\t}\n\t}\n\n\tprivate setCursor(tree?: Tree<V>) {\n\t\tif (tree !== this.cursor) {\n\t\t\tthis.pubsub.emit({ type: \"move-cursor\", tree });\n\t\t}\n\t\tthis.cursor = tree;\n\t}\n\n\tprivate ensureValidCursor() {\n\t\tif (this.cursor && this.cursor.root !== this.root) {\n\t\t\tconst first = this.selection.values().next();\n\t\t\tthis.setCursor(first.done ? undefined : first.value);\n\t\t} else {\n\t\t\tthis.setCursor(undefined);\n\t\t}\n\t}\n\n\tprivate emitTree(tree?: Tree<V>) {\n\t\tif (!tree) {\n\t\t\treturn;\n\t\t}\n\t\tthis.emitTree(tree.nextSibling);\n\t\tthis.pubsub.emit({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild);\n\t}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PubSub {\n    constructor() {\n        this.handlers = new Set();\n    }\n    subscribe(fn) {\n        this.handlers.add(fn);\n    }\n    unsubscribe(fn) {\n        this.handlers.delete(fn);\n    }\n    emit(event) {\n        for (const fn of this.handlers) {\n            fn(event);\n        }\n    }\n}\nexports.PubSub = PubSub;\n//# sourceMappingURL=PubSub.js.map"],"sourceRoot":""}