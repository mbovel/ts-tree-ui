{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./demo/app.ts","webpack:///./node_modules/ts-tree/build/Tree.js","webpack:///./src/HTMLView.ts","webpack:///./src/Model.ts","webpack:///./node_modules/ts-pubsub/build/PubSub.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ts_tree_1","HTMLView_1","model","Model","Tree","outputEl","document","getElementById","HTMLView","v","text","createTextNode","toString","containerEl","createElement","appendChild","[object Object]","children","this","_children","child","remove","_parent","parent","root","nextSibling","indexOf","previousSibling","firstChild","lastChild","length","previous","lastDescendant","next","parentNext","newTree","insertAfter","insertBefore","removeChild","undefined","reference","index","splice","that","thisAncestors","ancestors","thatAncestors","minLength","Math","min","thisAncestor","thatAncestor","lowestCommonAncestor","siblings","isChildOf","fn","sort","a","b","map","_","clone","childrenBefore","childrenAfter","descendants","isMac","navigator","platform","toUpperCase","valueToHtmlEl","rootUlEl","treeToHtmlEl","Map","htmlElToTree","cursorEl","modelEventHandler","handleModelEvent","mouseEventHandler","handleMouseEvent","keyboardEventHandler","handleKeyboardEvent","subscribe","addEventListener","unsubscribe","removeEventListener","e","type","newNodeEl","tree","nextSiblingEl","getHtmlEl","childNodes","set","el","parentElement","Error","delete","classList","add","targetTree","getTarget","ctrlKey","metaKey","preventDefault","selectToggle","shiftKey","selectUntil","openToggle","selectOne","resetSelection","selectAll","copy","paste","selectPrev","selectNext","selection","isOnlySelected","toggle","size","has","target","Node","current","parentNode","HTMLElement","result","ts_pubsub_1","isLeaf","_clipboard","_selection","Set","_pubsub","PubSub","sortedSelection","isBefore","selectedSubtrees","last","node","push","emitTree","removeFromSelection","addToSelection","setCursor","ensureValidCursor","_cursor","unselect","end","reverse","emit","first","values","done","handlers","event"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Tree } from \"ts-tree\";\nimport { HTMLView } from \"../src/HTMLView\";\nimport { Model } from \"../src/Model\";\n\nconst model = new Model<number>(\n\tnew Tree(1, [new Tree(2, [new Tree(3, [new Tree(4)])]), new Tree(5), new Tree(6), new Tree(7)]),\n\tt => true\n);\nconst toHtml = (v: number) => {\n\tconst text = document.createTextNode(v.toString());\n\tconst containerEl = document.createElement(\"div\");\n\tcontainerEl.appendChild(text);\n\treturn containerEl;\n};\nconst outputEl = document.getElementById(\"output\") as HTMLElement;\nconst view = new HTMLView<number>(model, toHtml, outputEl);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Tree {\n    constructor(value, children = []) {\n        this.value = value;\n        this._children = children;\n        for (const child of children) {\n            child.remove();\n            child._parent = this;\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get root() {\n        return this._parent ? this._parent.root : this;\n    }\n    get nextSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) + 1];\n    }\n    get previousSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) - 1];\n    }\n    get firstChild() {\n        return this._children[0];\n    }\n    get lastChild() {\n        return this._children[this._children.length - 1];\n    }\n    get previous() {\n        const previousSibling = this.previousSibling;\n        if (previousSibling)\n            return previousSibling.lastDescendant || previousSibling;\n        return this._parent;\n    }\n    get lastDescendant() {\n        const lastChild = this.lastChild;\n        if (lastChild)\n            return lastChild.lastDescendant || lastChild;\n    }\n    get next() {\n        return this.firstChild || this.nextSibling || this.parentNext;\n    }\n    get parentNext() {\n        if (this._parent)\n            return this._parent.nextSibling || this._parent.parentNext;\n    }\n    after(newTree) {\n        if (this._parent)\n            return this._parent.insertAfter(this, newTree);\n    }\n    before(newTree) {\n        if (this._parent)\n            return this._parent.insertBefore(this, newTree);\n    }\n    remove() {\n        if (this._parent)\n            return this._parent.removeChild(this);\n    }\n    appendChild(newTree) {\n        return this.insertBefore(undefined, newTree);\n    }\n    insertAfter(reference, newTree) {\n        return this.insertBefore(reference ? reference.nextSibling : this.firstChild, newTree);\n    }\n    insertBefore(reference, newTree) {\n        const index = reference ? this._children.indexOf(reference) : this._children.length;\n        if (index >= 0) {\n            newTree.remove();\n            this._children.splice(index, 0, newTree);\n            newTree._parent = this;\n            return newTree;\n        }\n    }\n    removeChild(child) {\n        const index = this._children.indexOf(child);\n        if (index >= 0) {\n            this._children.splice(index, 1);\n            child._parent = undefined;\n            return child;\n        }\n    }\n    isBefore(that) {\n        if (this === that)\n            return 0;\n        const thisAncestors = [...this.ancestors(), this];\n        const thatAncestors = [...that.ancestors(), that];\n        const minLength = Math.min(thisAncestors.length, thatAncestors.length);\n        for (let i = 0; i < minLength; ++i) {\n            const thisAncestor = thisAncestors[i];\n            const thatAncestor = thatAncestors[i];\n            if (thisAncestor !== thatAncestor) {\n                const lowestCommonAncestor = thisAncestors[i]._parent;\n                if (!lowestCommonAncestor)\n                    return 0;\n                const siblings = lowestCommonAncestor._children;\n                return siblings.indexOf(thisAncestor) < siblings.indexOf(thatAncestor) ? -1 : 1;\n            }\n        }\n        return thisAncestors.length < thatAncestors.length ? -1 : 1;\n    }\n    isChildOf(that) {\n        if (this.parent === that)\n            return true;\n        if (this.parent)\n            return this.parent.isChildOf(that);\n        return false;\n    }\n    sortChildren(fn) {\n        this._children.sort((a, b) => fn(a.value, b.value));\n    }\n    clone() {\n        return new Tree(this.value, this._children.map(_ => _.clone()));\n    }\n    *childrenAfter(reference) {\n        const length = this._children.length;\n        for (let i = this._children.indexOf(reference) + 1; i < length; ++i) {\n            yield this._children[i];\n        }\n    }\n    *childrenBefore(reference) {\n        for (let i = this._children.indexOf(reference) - 1; i >= 0; --i) {\n            yield this._children[i];\n        }\n    }\n    *previousSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenBefore(this);\n    }\n    *nextSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenAfter(this);\n    }\n    *descendants() {\n        for (const child of this._children) {\n            yield child;\n            yield* child.descendants();\n        }\n    }\n    *ancestors() {\n        if (this._parent) {\n            yield* this._parent.ancestors();\n            yield this._parent;\n        }\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=Tree.js.map","import { Tree } from \"ts-tree\";\nimport { Model } from \"./Model\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nconst isMac = navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n\nexport class HTMLView<V> {\n\tprivate readonly treeToHtmlEl: Map<Tree<V>, HTMLElement> = new Map();\n\tprivate readonly htmlElToTree: Map<HTMLElement, Tree<V>> = new Map();\n\tprivate readonly modelEventHandler: (e: ModelEvent<V>) => void;\n\tprivate readonly mouseEventHandler: (e: MouseEvent) => void;\n\tprivate readonly keyboardEventHandler: (e: KeyboardEvent) => void;\n\tprivate cursorEl: HTMLElement | null = null;\n\n\tconstructor(\n\t\tprivate readonly model: Model<V>,\n\t\tprivate readonly valueToHtmlEl: (v: V) => Node,\n\t\tprivate readonly rootUlEl: Node\n\t) {\n\t\tthis.modelEventHandler = this.handleModelEvent.bind(this);\n\t\tthis.mouseEventHandler = this.handleMouseEvent.bind(this);\n\t\tthis.keyboardEventHandler = this.handleKeyboardEvent.bind(this);\n\t\tthis.model.subscribe(this.modelEventHandler);\n\t\tdocument.addEventListener(\"mousedown\", this.mouseEventHandler);\n\t\tdocument.addEventListener(\"keydown\", this.keyboardEventHandler);\n\t}\n\n\tunbind() {\n\t\tthis.model.unsubscribe(this.modelEventHandler);\n\t\tthis.rootUlEl.removeEventListener(\"mousedown\", this.mouseEventHandler);\n\t}\n\n\tprivate handleModelEvent(e: ModelEvent<V>) {\n\t\tswitch (e.type) {\n\t\t\tcase \"insert\": {\n\t\t\t\tconst newNodeEl = document.createElement(\"li\");\n\t\t\t\tnewNodeEl.appendChild(this.valueToHtmlEl(e.tree.value));\n\t\t\t\tnewNodeEl.appendChild(document.createElement(\"ul\"));\n\t\t\t\tconst nextSiblingEl = e.tree.nextSibling\n\t\t\t\t\t? this.getHtmlEl(e.tree.nextSibling)\n\t\t\t\t\t: null;\n\t\t\t\tconst parentEl = e.tree.parent\n\t\t\t\t\t? this.getHtmlEl(e.tree.parent).childNodes[1]\n\t\t\t\t\t: this.rootUlEl;\n\t\t\t\tparentEl.insertBefore(newNodeEl, nextSiblingEl);\n\t\t\t\tthis.htmlElToTree.set(newNodeEl, e.tree);\n\t\t\t\tthis.treeToHtmlEl.set(e.tree, newNodeEl);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove\": {\n\t\t\t\tconst el = this.getHtmlEl(e.tree);\n\t\t\t\tif (!el.parentElement) {\n\t\t\t\t\tthrow new Error(\"Cannot remove root element\");\n\t\t\t\t}\n\t\t\t\tthis.htmlElToTree.delete(el);\n\t\t\t\tthis.treeToHtmlEl.delete(e.tree);\n\t\t\t\tel.parentElement.removeChild(el);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"add-to-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.add(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove-from-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.remove(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"move-cursor\": {\n\t\t\t\tif (this.cursorEl) {\n\t\t\t\t\tthis.cursorEl.classList.remove(\"cursor\");\n\t\t\t\t}\n\t\t\t\tif (e.tree) {\n\t\t\t\t\tthis.cursorEl = this.getHtmlEl(e.tree);\n\t\t\t\t\tthis.cursorEl.classList.add(\"cursor\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.cursorEl = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleMouseEvent(e: MouseEvent) {\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (targetTree) {\n\t\t\t// If ctrl+shift are pressed, then default to calling it a ctrl\n\t\t\t// (MS defaults to shift, Dropbox to ctrl).\n\t\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.model.selectToggle(targetTree);\n\t\t\t} else if (e.shiftKey) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.model.selectUntil(targetTree);\n\t\t\t} else {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.openToggle(targetTree);\n\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.model.resetSelection();\n\t\t}\n\t}\n\n\tprivate handleKeyboardEvent(e: KeyboardEvent) {\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"a\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectAll();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.copy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.paste();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectPrev();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectNext();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tfor (const tree of this.model.selection) {\n\t\t\t\t\t\tthis.getHtmlEl(tree).classList.remove(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tfor (const tree of this.model.selection) {\n\t\t\t\t\t\tthis.getHtmlEl(tree).classList.add(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Delete\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.delete();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Backspace\":\n\t\t\t\t\tif (isMac) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.model.delete();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate openToggle(tree: Tree<V>) {\n\t\tif (this.isOnlySelected(tree)) this.getHtmlEl(tree).classList.toggle(\"closed\");\n\t}\n\n\tprivate isOnlySelected(tree: Tree<V>) {\n\t\treturn this.model.selection.size === 1 && this.model.selection.has(tree);\n\t}\n\n\tprivate getTarget(e: Event): Tree<V> | undefined {\n\t\tif (e.target instanceof Node) {\n\t\t\tfor (let current: Node | null = e.target; current; current = current.parentNode) {\n\t\t\t\tif (current instanceof HTMLElement) {\n\t\t\t\t\tconst tree = this.htmlElToTree.get(current);\n\t\t\t\t\tif (tree) {\n\t\t\t\t\t\treturn tree;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getHtmlEl(tree: Tree<V>): HTMLElement {\n\t\tconst result = this.treeToHtmlEl.get(tree);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getNode(el: HTMLElement): Tree<V> {\n\t\tconst result = this.htmlElToTree.get(el);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n}\n","import { PubSub } from \"ts-pubsub\";\nimport { Tree } from \"ts-tree\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nexport class Model<V> {\n\tprivate _clipboard: Tree<V>[] = [];\n\tprivate _selection: Set<Tree<V>> = new Set();\n\tprivate _cursor?: Tree<V>;\n\tprivate _pubsub: PubSub<ModelEvent<V>> = new PubSub();\n\n\tconstructor(readonly root: Tree<V>, readonly isLeaf: (tree: Tree<V>) => boolean) {}\n\n\tget selection(): ReadonlySet<Tree<V>> {\n\t\treturn this._selection;\n\t}\n\n\tget sortedSelection() {\n\t\tconst result = [...this._selection];\n\t\tresult.sort((a, b) => a.isBefore(b));\n\t\treturn result;\n\t}\n\n\tget selectedSubtrees() {\n\t\tconst result = [];\n\t\tlet last: Tree<V> | null = null;\n\t\tfor (const node of this.sortedSelection) {\n\t\t\tif (!last || !node.isChildOf(last)) {\n\t\t\t\tresult.push(node);\n\t\t\t\tlast = node;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis._pubsub.subscribe(fn);\n\t\tthis.emitTree(this.root);\n\t}\n\n\tunsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis._pubsub.unsubscribe(fn);\n\t}\n\n\tselectOne(tree?: Tree<V>) {\n\t\tif (tree && this._selection.size === 1 && this._selection.has(tree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const node of this._selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tif (!tree) {\n\t\t\tthis.ensureValidCursor();\n\t\t\treturn;\n\t\t}\n\t\tthis.addToSelection(tree);\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectPrev() {\n\t\tif (this._cursor && this._cursor.previous) this.selectOne(this._cursor.previous);\n\t}\n\n\tselectNext() {\n\t\tif (this._cursor && this._cursor.next) this.selectOne(this._cursor.next);\n\t}\n\n\tselectToggle(tree: Tree<V>) {\n\t\tif (this._selection.has(tree)) {\n\t\t\tthis.unselect(tree);\n\t\t} else {\n\t\t\tthis.addToSelection(tree);\n\t\t\tthis.setCursor(tree);\n\t\t}\n\t}\n\n\tselectUntil(tree: Tree<V>) {\n\t\tif (!this._cursor) {\n\t\t\treturn;\n\t\t}\n\t\tconst isBefore = tree.isBefore(this._cursor) < 0;\n\t\tlet current: Tree<V> | undefined = isBefore ? tree : this._cursor.next;\n\t\tconst end: Tree<V> | undefined = isBefore ? this._cursor : tree.next;\n\t\twhile (current && current !== end) {\n\t\t\tthis.addToSelection(current);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectAll() {\n\t\tfor (let current: Tree<V> | undefined = this.root; current; current = current.next) {\n\t\t\tthis.addToSelection(current);\n\t\t}\n\t}\n\n\tresetSelection() {\n\t\tfor (const node of this._selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t}\n\n\tunselect(target: Tree<V>) {\n\t\tthis.removeFromSelection(target);\n\t\tthis.ensureValidCursor();\n\t}\n\n\tcopy(): void {\n\t\tthis._clipboard = this.selectedSubtrees.map(t => t.clone());\n\t\tthis._clipboard.reverse();\n\t}\n\n\tpaste(): void {\n\t\tif (!this._cursor) {\n\t\t\treturn;\n\t\t}\n\t\tconst isLeaf = this.isLeaf(this._cursor);\n\t\tconst parent = isLeaf ? this._cursor.parent : this._cursor;\n\t\tconst previousSibling = isLeaf ? this._cursor : undefined;\n\t\tif (!parent) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const tree of this._clipboard) {\n\t\t\tthis.insertAfter(parent, previousSibling, tree.clone());\n\t\t}\n\t}\n\n\tdelete(): void {\n\t\tfor (const tree of this.selectedSubtrees) {\n\t\t\tthis.remove(tree);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t}\n\n\tprivate insertAfter(parent: Tree<V>, reference: Tree<V> | undefined, tree: Tree<V>) {\n\t\tparent.insertAfter(reference, tree);\n\t\tthis._pubsub.emit({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild);\n\t}\n\n\tprivate remove(tree: Tree<V>) {\n\t\tthis.removeFromSelection(tree);\n\t\ttree.remove();\n\t\tthis._pubsub.emit({ type: \"remove\", tree });\n\t}\n\n\tprivate addToSelection(tree: Tree<V>) {\n\t\tif (!this._selection.has(tree)) {\n\t\t\tthis._selection.add(tree);\n\t\t\tthis._pubsub.emit({ type: \"add-to-selection\", tree });\n\t\t}\n\t}\n\n\tprivate removeFromSelection(tree: Tree<V>) {\n\t\tif (this._selection.delete(tree)) {\n\t\t\tthis._pubsub.emit({ type: \"remove-from-selection\", tree });\n\t\t}\n\t}\n\n\tprivate setCursor(tree?: Tree<V>) {\n\t\tif (tree !== this._cursor) {\n\t\t\tthis._pubsub.emit({ type: \"move-cursor\", tree });\n\t\t}\n\t\tthis._cursor = tree;\n\t}\n\n\tprivate ensureValidCursor() {\n\t\tif (this._cursor && this._cursor.root !== this.root) {\n\t\t\tconst first = this._selection.values().next();\n\t\t\tthis.setCursor(first.done ? undefined : first.value);\n\t\t} else {\n\t\t\tthis.setCursor(undefined);\n\t\t}\n\t}\n\n\tprivate emitTree(tree?: Tree<V>) {\n\t\tif (!tree) {\n\t\t\treturn;\n\t\t}\n\t\tthis.emitTree(tree.nextSibling);\n\t\tthis._pubsub.emit({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild);\n\t}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PubSub {\n    constructor() {\n        this.handlers = new Set();\n    }\n    subscribe(fn) {\n        this.handlers.add(fn);\n    }\n    unsubscribe(fn) {\n        this.handlers.delete(fn);\n    }\n    emit(event) {\n        for (const fn of this.handlers) {\n            fn(event);\n        }\n    }\n}\nexports.PubSub = PubSub;\n//# sourceMappingURL=PubSub.js.map"],"sourceRoot":""}