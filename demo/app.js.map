{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./demo/app.ts","webpack:///./node_modules/ts-tree/build/Tree.js","webpack:///./src/View.ts","webpack:///./src/Controller.ts","webpack:///./src/Model.ts","webpack:///./node_modules/ts-pubsub/build/PubSub.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ts_tree_1","View_1","Model_1","tree","Tree","tree2","model","Model","outputEl","document","getElementById","View","v","text","createTextNode","toString","containerEl","createElement","appendChild","addEventListener","e","newValue","prompt","setValue","parseInt","setRoot","[object Object]","children","this","_children","child","remove","_parent","json","map","fromJSON","length","toJSON","parent","root","nextSibling","indexOf","previousSibling","firstChild","lastChild","previous","lastDescendant","next","parentNext","newTree","insertAfter","insertBefore","removeChild","undefined","reference","index","splice","that","thisAncestors","ancestors","thatAncestors","minLength","Math","min","thisAncestor","thatAncestor","lowestCommonAncestor","siblings","isChildOf","fn","sort","a","b","_","clone","childrenBefore","childrenAfter","descendants","Controller_1","valueToHtmlEl","rootUlEl","cursorEl","treeToHtmlEl","Map","htmlElToTree","handleModelEvent","type","insert","changeValue","getHtmlEl","classList","add","controller","Controller","bindModel","bindController","subscribe","emitAllInserts","unsubscribe","unbind","result","Error","el","target","Node","current","parentNode","HTMLElement","treeEl","childrenContainerEl","set","getParentEl","getNextSiblingEl","delete","replaceChild","ulEl","querySelector","isMac","navigator","platform","toUpperCase","view","handleMousedownEvent","targetTree","getTarget","clickedEl","setAttribute","ctrlKey","metaKey","selectToggle","shiftKey","selectUntil","isSelected","selectOne","handleMouseupEvent","removeAttribute","handleClickEvent","resetSelection","handleKeyboardEvent","preventDefault","selectAll","copy","paste","selectPrev","selectNext","selectedSubtrees","handleDragstartEvent","dataTransfer","setData","dropEffect","mirrorEl","subtree","subtreeEl","cloneNode","body","setDragImage","handleDragenterEvent","dragoverTree","isLeaf","handleDragendEvent","insertAllIn","removeEventListener","ts_pubsub_1","clipboard","selection","Set","pubsub","PubSub","emitTree","sortedSelection","isBefore","last","node","push","has","size","isOnlySelected","removeFromSelection","addToSelection","setCursor","ensureValidCursor","cursor","unselect","end","trees","insertAllAfter","removeAll","newRoot","emit","setValueOf","filter","reverse","firstLarger","find","first","values","done","handlers","event"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Tree } from \"ts-tree\";\nimport { View } from \"../src/View\";\nimport { Model } from \"../src/Model\";\n\nconst tree = new Tree(1, [\n\tnew Tree(2, [new Tree(3, [new Tree(4)])]),\n\tnew Tree(5),\n\tnew Tree(6),\n\tnew Tree(7)\n]);\n\nconst tree2 = new Tree(9, [new Tree(10)]);\n\nconst model = new Model<number>(tree, t => false);\nconst toHtml = (v: number) => {\n\tconst text = document.createTextNode(v.toString());\n\tconst containerEl = document.createElement(\"div\");\n\tcontainerEl.appendChild(text);\n\treturn containerEl;\n};\nconst outputEl = document.getElementById(\"output\") as HTMLElement;\nconst view = new View<number>(model, toHtml, outputEl);\nview.bind();\n\nconst changeValueButton = document.getElementById(\"change-value\") as HTMLElement;\nchangeValueButton.addEventListener(\"click\", e => {\n\tconst newValue = prompt(\"Please enter a new value\");\n\tif (newValue) {\n\t\tmodel.setValue(parseInt(newValue));\n\t}\n});\n\nconst changeRootButton = document.getElementById(\"change-root\") as HTMLElement;\nchangeRootButton.addEventListener(\"click\", e => {\n\tmodel.setRoot(tree2);\n});","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Tree {\n    constructor(value, children = []) {\n        this.value = value;\n        this._children = children;\n        for (const child of children) {\n            child.remove();\n            child._parent = this;\n        }\n    }\n    static fromJSON(json) {\n        return new Tree(json.value, (json.children || []).map(Tree.fromJSON));\n    }\n    toJSON() {\n        if (this._children.length > 0) {\n            return {\n                value: this.value,\n                children: this._children.map(child => child.toJSON())\n            };\n        }\n        return { value: this.value };\n    }\n    get children() {\n        return this._children;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get root() {\n        return this._parent ? this._parent.root : this;\n    }\n    get nextSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) + 1];\n    }\n    get previousSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) - 1];\n    }\n    get firstChild() {\n        return this._children[0];\n    }\n    get lastChild() {\n        return this._children[this._children.length - 1];\n    }\n    get previous() {\n        const previousSibling = this.previousSibling;\n        if (previousSibling)\n            return previousSibling.lastDescendant || previousSibling;\n        return this._parent;\n    }\n    get lastDescendant() {\n        const lastChild = this.lastChild;\n        if (lastChild)\n            return lastChild.lastDescendant || lastChild;\n    }\n    get next() {\n        return this.firstChild || this.nextSibling || this.parentNext;\n    }\n    get parentNext() {\n        if (this._parent)\n            return this._parent.nextSibling || this._parent.parentNext;\n    }\n    after(newTree) {\n        if (this._parent)\n            return this._parent.insertAfter(this, newTree);\n    }\n    before(newTree) {\n        if (this._parent)\n            return this._parent.insertBefore(this, newTree);\n    }\n    remove() {\n        if (this._parent)\n            return this._parent.removeChild(this);\n    }\n    appendChild(newTree) {\n        return this.insertBefore(undefined, newTree);\n    }\n    insertAfter(reference, newTree) {\n        return this.insertBefore(reference ? reference.nextSibling : this.firstChild, newTree);\n    }\n    insertBefore(reference, newTree) {\n        const index = reference ? this._children.indexOf(reference) : this._children.length;\n        if (index >= 0) {\n            newTree.remove();\n            this._children.splice(index, 0, newTree);\n            newTree._parent = this;\n            return newTree;\n        }\n    }\n    removeChild(child) {\n        const index = this._children.indexOf(child);\n        if (index >= 0) {\n            this._children.splice(index, 1);\n            child._parent = undefined;\n            return child;\n        }\n    }\n    isBefore(that) {\n        if (this === that)\n            return 0;\n        const thisAncestors = [...this.ancestors(), this];\n        const thatAncestors = [...that.ancestors(), that];\n        const minLength = Math.min(thisAncestors.length, thatAncestors.length);\n        for (let i = 0; i < minLength; ++i) {\n            const thisAncestor = thisAncestors[i];\n            const thatAncestor = thatAncestors[i];\n            if (thisAncestor !== thatAncestor) {\n                const lowestCommonAncestor = thisAncestors[i]._parent;\n                if (!lowestCommonAncestor)\n                    return 0;\n                const siblings = lowestCommonAncestor._children;\n                return siblings.indexOf(thisAncestor) < siblings.indexOf(thatAncestor) ? -1 : 1;\n            }\n        }\n        return thisAncestors.length < thatAncestors.length ? -1 : 1;\n    }\n    isChildOf(that) {\n        if (this.parent === that)\n            return true;\n        if (this.parent)\n            return this.parent.isChildOf(that);\n        return false;\n    }\n    sortChildren(fn) {\n        this._children.sort((a, b) => fn(a.value, b.value));\n    }\n    clone() {\n        return new Tree(this.value, this._children.map(_ => _.clone()));\n    }\n    *childrenAfter(reference) {\n        const length = this._children.length;\n        for (let i = this._children.indexOf(reference) + 1; i < length; ++i) {\n            yield this._children[i];\n        }\n    }\n    *childrenBefore(reference) {\n        for (let i = this._children.indexOf(reference) - 1; i >= 0; --i) {\n            yield this._children[i];\n        }\n    }\n    *previousSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenBefore(this);\n    }\n    *nextSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenAfter(this);\n    }\n    *descendants() {\n        for (const child of this._children) {\n            yield child;\n            yield* child.descendants();\n        }\n    }\n    *ancestors() {\n        if (this._parent) {\n            yield* this._parent.ancestors();\n            yield this._parent;\n        }\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=Tree.js.map","import { Tree } from \"ts-tree\";\nimport { Controller } from \"./Controller\";\nimport { Model } from \"./Model\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nexport class View<V> {\n\tprotected readonly controller: Controller<V>;\n\tprivate cursorEl: HTMLElement | null = null;\n\tprivate readonly treeToHtmlEl: Map<Tree<V>, HTMLElement> = new Map();\n\tprivate readonly htmlElToTree: Map<HTMLElement, Tree<V>> = new Map();\n\n\tconstructor(\n\t\tprotected readonly model: Model<V>,\n\t\tprotected readonly valueToHtmlEl: (v: V) => Node,\n\t\tprotected readonly rootUlEl: Node\n\t) {\n\t\tthis.controller = new Controller<V>(this, model);\n\t}\n\n\tbind() {\n\t\tthis.bindModel();\n\t\tthis.bindController();\n\t}\n\n\tbindModel() {\n\t\tthis.model.subscribe(this.handleModelEvent);\n\t\tthis.model.emitAllInserts(this.handleModelEvent);\n\t}\n\n\tunbindModel() {\n\t\tthis.model.unsubscribe(this.handleModelEvent);\n\t}\n\n\tbindController() {\n\t\tthis.controller.bind();\n\t}\n\n\tunbindController() {\n\t\tthis.controller.unbind();\n\t}\n\n\tgetHtmlEl(tree: Tree<V>): HTMLElement {\n\t\tconst result = this.treeToHtmlEl.get(tree);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetTree(el: HTMLElement): Tree<V> {\n\t\tconst result = this.htmlElToTree.get(el);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetTarget(e: Event): Tree<V> | undefined {\n\t\tif (e.target instanceof Node) {\n\t\t\tfor (let current: Node | null = e.target; current; current = current.parentNode) {\n\t\t\t\tif (current instanceof HTMLElement) {\n\t\t\t\t\tconst tree = this.htmlElToTree.get(current);\n\t\t\t\t\tif (tree) {\n\t\t\t\t\t\treturn tree;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected insert(tree: Tree<V>): HTMLElement {\n\t\tconst treeEl = document.createElement(\"li\");\n\t\ttreeEl.appendChild(this.valueToHtmlEl(tree.value));\n\t\tconst childrenContainerEl = document.createElement(\"ul\");\n\t\ttreeEl.appendChild(childrenContainerEl);\n\t\tthis.htmlElToTree.set(treeEl, tree);\n\t\tthis.treeToHtmlEl.set(tree, treeEl);\n\t\tconst parentEl = this.getParentEl(tree);\n\t\treturn parentEl.insertBefore(treeEl, this.getNextSiblingEl(tree));\n\t}\n\n\tprotected remove(tree: Tree<V>) {\n\t\tconst treeEl = this.getHtmlEl(tree);\n\t\tthis.htmlElToTree.delete(treeEl);\n\t\tthis.treeToHtmlEl.delete(tree);\n\t\ttreeEl.remove();\n\t}\n\n\tprotected changeValue(tree: Tree<V>) {\n\t\tconst treeEl = this.getHtmlEl(tree);\n\t\tif (!treeEl.firstChild) {\n\t\t\tthrow new Error(\"\");\n\t\t}\n\t\ttreeEl.replaceChild(this.valueToHtmlEl(tree.value), treeEl.firstChild);\n\t}\n\n\tprivate handleModelEvent = (e: ModelEvent<V>) => {\n\t\tswitch (e.type) {\n\t\t\tcase \"insert\": {\n\t\t\t\tthis.insert(e.tree);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove\": {\n\t\t\t\tthis.remove(e.tree);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"change-value\": {\n\t\t\t\tthis.changeValue(e.tree);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"add-to-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.add(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove-from-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.remove(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"move-cursor\": {\n\t\t\t\tif (this.cursorEl) {\n\t\t\t\t\tthis.cursorEl.classList.remove(\"cursor\");\n\t\t\t\t}\n\t\t\t\tif (e.tree) {\n\t\t\t\t\tthis.cursorEl = this.getHtmlEl(e.tree);\n\t\t\t\t\tthis.cursorEl.classList.add(\"cursor\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.cursorEl = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate getNextSiblingEl(tree: Tree<V>): Node | null {\n\t\treturn tree.nextSibling ? this.getHtmlEl(tree.nextSibling) : null;\n\t}\n\n\tprivate getParentEl(tree: Tree<V>): Node {\n\t\tif (!tree.parent) {\n\t\t\treturn this.rootUlEl;\n\t\t}\n\t\tconst ulEl = this.getHtmlEl(tree.parent).querySelector(\"ul\");\n\t\tif (!ulEl) {\n\t\t\tthrow new Error();\n\t\t}\n\t\treturn ulEl;\n\t}\n}\n","import { Tree } from \"ts-tree\";\nimport { Model } from \"./Model\";\nimport { View } from \"./View\";\n\nconst isBrowser = typeof navigator === \"undefined\";\nconst isMac = isBrowser ? false : navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n\nexport class Controller<V> {\n\tprivate mirrorEl?: HTMLElement;\n\tprivate clickedEl?: HTMLElement;\n\tprivate dragoverTree?: Tree<V>;\n\tconstructor(readonly view: View<V>, readonly model: Model<V>) {}\n\n\tbind() {\n\t\tdocument.addEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.addEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.addEventListener(\"click\", this.handleClickEvent);\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.addEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.addEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.addEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tunbind() {\n\t\tdocument.removeEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.removeEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.removeEventListener(\"click\", this.handleClickEvent);\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.removeEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.removeEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.removeEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tprivate handleMousedownEvent = (e: MouseEvent) => {\n\t\tconst targetTree = this.view.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tthis.clickedEl = this.view.getHtmlEl(targetTree);\n\t\t\tthis.clickedEl.setAttribute(\"draggable\", \"true\");\n\n\t\t\t// If ctrl+shift are pressed, then default to calling it a ctrl\n\t\t\t// (MS defaults to shift, Dropbox to ctrl).\n\t\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t\tthis.model.selectToggle(targetTree);\n\t\t\t} else if (e.shiftKey) {\n\t\t\t\tthis.model.selectUntil(targetTree);\n\t\t\t} else {\n\t\t\t\tif (!this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleMouseupEvent = (e: MouseEvent) => {\n\t\tif (this.clickedEl) {\n\t\t\tthis.clickedEl.removeAttribute(\"draggable\");\n\t\t}\n\t\tconst targetTree = this.view.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tif (!e.ctrlKey && !e.metaKey && !e.shiftKey) {\n\t\t\t\tif (this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleClickEvent = (e: MouseEvent) => {\n\t\tif (!this.view.getTarget(e)) {\n\t\t\tthis.model.resetSelection();\n\t\t}\n\t};\n\n\tprivate handleKeyboardEvent = (e: KeyboardEvent) => {\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"a\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectAll();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.copy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.paste();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectPrev();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectNext();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.view.getHtmlEl(tree).classList.remove(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.view.getHtmlEl(tree).classList.add(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Delete\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.delete();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Backspace\":\n\t\t\t\t\tif (isMac) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.model.delete();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleDragstartEvent = (e: DragEvent) => {\n\t\te.dataTransfer.setData(\"text/html\", \"\");\n\t\te.dataTransfer.dropEffect = \"move\";\n\n\t\tconst target = this.view.getTarget(e);\n\t\tif (!target) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mirrorEl = document.createElement(\"ul\");\n\t\tthis.mirrorEl.classList.add(\"mirror\");\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tconst subtreeEl = this.view.getHtmlEl(subtree);\n\t\t\tthis.mirrorEl.appendChild(subtreeEl.cloneNode(true));\n\t\t}\n\t\tdocument.body.appendChild(this.mirrorEl);\n\t\te.dataTransfer.setDragImage(this.mirrorEl, 0, 0);\n\t};\n\n\tprivate handleDragenterEvent = (e: DragEvent) => {\n\t\tconst targetTree = this.view.getTarget(e);\n\t\tif (this.dragoverTree) {\n\t\t\tthis.view.getHtmlEl(this.dragoverTree).classList.remove(\"over\");\n\t\t\tthis.dragoverTree = undefined;\n\t\t}\n\t\tif (!targetTree || this.model.isLeaf(targetTree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tif (targetTree === subtree || targetTree.isChildOf(subtree)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.view.getHtmlEl(targetTree).classList.add(\"over\");\n\t\tthis.dragoverTree = targetTree;\n\t};\n\n\tprivate handleDragendEvent = (e: DragEvent) => {\n\t\tif (this.mirrorEl) {\n\t\t\tthis.mirrorEl.remove();\n\t\t}\n\t\tif (this.dragoverTree) {\n\t\t\tthis.model.insertAllIn(this.dragoverTree, ...this.model.selectedSubtrees);\n\t\t\tthis.view.getHtmlEl(this.dragoverTree).classList.remove(\"over\");\n\t\t\tthis.dragoverTree = undefined;\n\t\t}\n\t};\n}\n","import { PubSub } from \"ts-pubsub\";\nimport { Tree } from \"ts-tree\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nexport class Model<V> {\n\tprivate clipboard: Tree<V>[] = [];\n\tprivate selection: Set<Tree<V>> = new Set();\n\tprivate cursor?: Tree<V>;\n\tprivate pubsub: PubSub<ModelEvent<V>> = new PubSub();\n\n\tconstructor(\n\t\tprivate root: Tree<V>,\n\t\treadonly isLeaf: (tree: Tree<V>) => boolean,\n\t\treadonly sort?: (a: V, b: V) => number\n\t) {}\n\n\tsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.subscribe(fn);\n\t}\n\n\tunsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.unsubscribe(fn);\n\t}\n\n\temitAllInserts(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.emitTree(this.root, fn);\n\t}\n\n\tget sortedSelection() {\n\t\tconst result = [...this.selection];\n\t\tresult.sort((a, b) => a.isBefore(b));\n\t\treturn result;\n\t}\n\n\tget selectedSubtrees() {\n\t\tconst result = [];\n\t\tlet last: Tree<V> | null = null;\n\t\tfor (const node of this.sortedSelection) {\n\t\t\tif (!last || !node.isChildOf(last)) {\n\t\t\t\tresult.push(node);\n\t\t\t\tlast = node;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tisSelected(tree: Tree<V>) {\n\t\treturn this.selection.has(tree);\n\t}\n\n\tisOnlySelected(tree: Tree<V>) {\n\t\treturn this.selection.size === 1 && this.selection.has(tree);\n\t}\n\n\tselectOne(tree?: Tree<V>) {\n\t\tif (tree && this.isOnlySelected(tree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tif (!tree) {\n\t\t\tthis.ensureValidCursor();\n\t\t\treturn;\n\t\t}\n\t\tthis.addToSelection(tree);\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectPrev() {\n\t\tif (this.cursor && this.cursor.previous) {\n\t\t\tthis.selectOne(this.cursor.previous);\n\t\t}\n\t}\n\n\tselectNext() {\n\t\tif (this.cursor && this.cursor.next) {\n\t\t\tthis.selectOne(this.cursor.next);\n\t\t}\n\t}\n\n\tselectToggle(tree: Tree<V>) {\n\t\tif (this.selection.has(tree)) {\n\t\t\tthis.unselect(tree);\n\t\t} else {\n\t\t\tthis.addToSelection(tree);\n\t\t\tthis.setCursor(tree);\n\t\t}\n\t}\n\n\tselectUntil(tree: Tree<V>) {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tconst isBefore = tree.isBefore(this.cursor) < 0;\n\t\tlet current: Tree<V> | undefined = isBefore ? tree : this.cursor.next;\n\t\tconst end: Tree<V> | undefined = isBefore ? this.cursor : tree.next;\n\t\twhile (current && current !== end) {\n\t\t\tthis.addToSelection(current);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectAll() {\n\t\tfor (let current: Tree<V> | undefined = this.root; current; current = current.next) {\n\t\t\tthis.addToSelection(current);\n\t\t}\n\t}\n\n\tresetSelection() {\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t}\n\n\tunselect(target: Tree<V>) {\n\t\tthis.removeFromSelection(target);\n\t\tthis.ensureValidCursor();\n\t}\n\n\tcopy(): void {\n\t\tthis.clipboard = this.selectedSubtrees.map(t => t.clone());\n\t}\n\n\tpaste(): void {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllIn(this.cursor, ...this.clipboard.map(t => t.clone()));\n\t}\n\n\tinsertAll(...trees: Tree<V>[]) {\n\t\tif (this.cursor) {\n\t\t\treturn this.insertAllIn(this.cursor, ...trees);\n\t\t}\n\t}\n\n\tinsertAllIn(target: Tree<V>, ...trees: Tree<V>[]) {\n\t\tconst isLeaf = this.isLeaf(target);\n\t\tconst parent = isLeaf ? target.parent : target;\n\t\tconst previousSibling = isLeaf ? target : undefined;\n\t\tif (!parent) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllAfter(parent, previousSibling, ...trees);\n\t}\n\n\tdelete(): void {\n\t\tthis.removeAll(...this.selectedSubtrees);\n\t}\n\n\tsetRoot(newRoot: Tree<V>) {\n\t\tthis.pubsub.emit({ type: \"remove\", tree: this.root });\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t\tthis.root = newRoot;\n\t\tthis.emitTree(this.root);\n\t}\n\n\tsetValue(newValue: V) {\n\t\tif (this.cursor) {\n\t\t\treturn this.setValueOf(this.cursor, newValue);\n\t\t}\n\t}\n\n\tsetValueOf(tree: Tree<V>, newValue: V) {\n\t\tif (!tree.parent) {\n\t\t\treturn;\n\t\t}\n\t\ttree.value = newValue;\n\t\tif (!this.sort) {\n\t\t\tthis.pubsub.emit({ type: \"change-value\", tree });\n\t\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t\t} else {\n\t\t\tthis.insertAllAfter(tree.parent, tree.previousSibling, tree);\n\t\t}\n\t}\n\n\tinsertAllAfter(parent: Tree<V>, previousSibling: Tree<V> | undefined, ...trees: Tree<V>[]) {\n\t\tthis.removeAll(...trees.filter(tree => tree.root === this.root));\n\t\tfor (const tree of trees.reverse()) {\n\t\t\tif (this.sort) {\n\t\t\t\tconst sort = this.sort; // TS hack\n\t\t\t\tconst firstLarger = parent.children.find(\n\t\t\t\t\tchild => sort(child.value, tree.value) > 0\n\t\t\t\t);\n\t\t\t\tparent.insertBefore(firstLarger, tree);\n\t\t\t} else {\n\t\t\t\tparent.insertAfter(previousSibling, tree);\n\t\t\t}\n\t\t\tthis.pubsub.emit({ type: \"insert\", tree });\n\t\t\tthis.emitTree(tree.firstChild);\n\t\t}\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tremoveAll(...trees: Tree<V>[]) {\n\t\tfor (const tree of trees) {\n\t\t\tthis.removeFromSelection(tree);\n\t\t\ttree.remove();\n\t\t\tthis.pubsub.emit({ type: \"remove\", tree });\n\t\t}\n\t\tthis.ensureValidCursor();\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tprivate addToSelection(tree: Tree<V>) {\n\t\tif (!this.selection.has(tree)) {\n\t\t\tthis.selection.add(tree);\n\t\t\tthis.pubsub.emit({ type: \"add-to-selection\", tree });\n\t\t}\n\t}\n\n\tprivate removeFromSelection(tree: Tree<V>) {\n\t\tif (this.selection.delete(tree)) {\n\t\t\tthis.pubsub.emit({ type: \"remove-from-selection\", tree });\n\t\t}\n\t}\n\n\tprivate setCursor(tree?: Tree<V>) {\n\t\tif (tree !== this.cursor) {\n\t\t\tthis.pubsub.emit({ type: \"move-cursor\", tree });\n\t\t}\n\t\tthis.cursor = tree;\n\t}\n\n\tprivate ensureValidCursor() {\n\t\tif (this.cursor && this.cursor.root !== this.root) {\n\t\t\tconst first = this.selection.values().next();\n\t\t\tthis.setCursor(first.done ? undefined : first.value);\n\t\t} else {\n\t\t\tthis.setCursor(undefined);\n\t\t}\n\t}\n\n\tprivate emitTree(\n\t\ttree?: Tree<V>,\n\t\tfn: (e: ModelEvent<V>) => any = this.pubsub.emit.bind(this.pubsub)\n\t) {\n\t\tif (!tree) {\n\t\t\treturn;\n\t\t}\n\t\tthis.emitTree(tree.nextSibling, fn);\n\t\tfn({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild, fn);\n\t}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PubSub {\n    constructor() {\n        this.handlers = new Set();\n    }\n    subscribe(fn) {\n        this.handlers.add(fn);\n    }\n    unsubscribe(fn) {\n        this.handlers.delete(fn);\n    }\n    emit(event) {\n        for (const fn of this.handlers) {\n            fn(event);\n        }\n    }\n}\nexports.PubSub = PubSub;\n//# sourceMappingURL=PubSub.js.map"],"sourceRoot":""}