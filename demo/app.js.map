{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./demo/app.ts","webpack:///./node_modules/ts-tree/build/Tree.js","webpack:///./src/HTMLView.ts","webpack:///./src/Model.ts","webpack:///./node_modules/ts-pubsub/build/PubSub.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ts_tree_1","HTMLView_1","model","Model","Tree","a","b","outputEl","document","getElementById","HTMLView","v","text","createTextNode","toString","containerEl","createElement","appendChild","[object Object]","children","this","_children","child","remove","_parent","parent","root","nextSibling","indexOf","previousSibling","firstChild","lastChild","length","previous","lastDescendant","next","parentNext","newTree","insertAfter","insertBefore","removeChild","undefined","reference","index","splice","that","thisAncestors","ancestors","thatAncestors","minLength","Math","min","thisAncestor","thatAncestor","lowestCommonAncestor","siblings","isChildOf","fn","sort","map","_","clone","childrenBefore","childrenAfter","descendants","isMac","navigator","platform","toUpperCase","valueToHtmlEl","rootUlEl","treeToHtmlEl","Map","htmlElToTree","cursorEl","handleModelEvent","e","type","newNodeEl","tree","childrenContainerEl","setAttribute","nextSiblingEl","getHtmlEl","childNodes","set","el","parentElement","Error","delete","classList","add","handleMousedownEvent","targetTree","getTarget","ctrlKey","metaKey","selectToggle","shiftKey","selectUntil","isSelected","selectOne","resetSelection","handleMouseupEvent","handleKeyboardEvent","preventDefault","selectAll","copy","paste","selectPrev","selectNext","selectedSubtrees","handleDragstartEvent","dataTransfer","setData","dropEffect","mirrorEl","subtree","subtreeEl","cloneNode","body","setDragImage","handleDragenterEvent","overTree","isLeaf","handleDragendEvent","insertAllIn","subscribe","addEventListener","unsubscribe","removeEventListener","target","Node","current","parentNode","HTMLElement","result","ts_pubsub_1","clipboard","selection","Set","pubsub","PubSub","emitTree","sortedSelection","isBefore","last","node","push","has","size","removeFromSelection","addToSelection","setCursor","ensureValidCursor","cursor","unselect","end","trees","reverse","emit","firstLarger","find","first","values","done","handlers","event"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Tree } from \"ts-tree\";\nimport { HTMLView } from \"../src/HTMLView\";\nimport { Model } from \"../src/Model\";\n\nconst model = new Model<number>(\n\tnew Tree(1, [new Tree(2, [new Tree(3, [new Tree(4)])]), new Tree(5), new Tree(6), new Tree(7)]),\n\tt => false,\n\t(a, b) => (a < b ? -1 : a > b ? 1 : 0)\n);\nconst toHtml = (v: number) => {\n\tconst text = document.createTextNode(v.toString());\n\tconst containerEl = document.createElement(\"div\");\n\tcontainerEl.appendChild(text);\n\treturn containerEl;\n};\nconst outputEl = document.getElementById(\"output\") as HTMLElement;\nconst view = new HTMLView<number>(model, toHtml, outputEl);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Tree {\n    constructor(value, children = []) {\n        this.value = value;\n        this._children = children;\n        for (const child of children) {\n            child.remove();\n            child._parent = this;\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get root() {\n        return this._parent ? this._parent.root : this;\n    }\n    get nextSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) + 1];\n    }\n    get previousSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) - 1];\n    }\n    get firstChild() {\n        return this._children[0];\n    }\n    get lastChild() {\n        return this._children[this._children.length - 1];\n    }\n    get previous() {\n        const previousSibling = this.previousSibling;\n        if (previousSibling)\n            return previousSibling.lastDescendant || previousSibling;\n        return this._parent;\n    }\n    get lastDescendant() {\n        const lastChild = this.lastChild;\n        if (lastChild)\n            return lastChild.lastDescendant || lastChild;\n    }\n    get next() {\n        return this.firstChild || this.nextSibling || this.parentNext;\n    }\n    get parentNext() {\n        if (this._parent)\n            return this._parent.nextSibling || this._parent.parentNext;\n    }\n    after(newTree) {\n        if (this._parent)\n            return this._parent.insertAfter(this, newTree);\n    }\n    before(newTree) {\n        if (this._parent)\n            return this._parent.insertBefore(this, newTree);\n    }\n    remove() {\n        if (this._parent)\n            return this._parent.removeChild(this);\n    }\n    appendChild(newTree) {\n        return this.insertBefore(undefined, newTree);\n    }\n    insertAfter(reference, newTree) {\n        return this.insertBefore(reference ? reference.nextSibling : this.firstChild, newTree);\n    }\n    insertBefore(reference, newTree) {\n        const index = reference ? this._children.indexOf(reference) : this._children.length;\n        if (index >= 0) {\n            newTree.remove();\n            this._children.splice(index, 0, newTree);\n            newTree._parent = this;\n            return newTree;\n        }\n    }\n    removeChild(child) {\n        const index = this._children.indexOf(child);\n        if (index >= 0) {\n            this._children.splice(index, 1);\n            child._parent = undefined;\n            return child;\n        }\n    }\n    isBefore(that) {\n        if (this === that)\n            return 0;\n        const thisAncestors = [...this.ancestors(), this];\n        const thatAncestors = [...that.ancestors(), that];\n        const minLength = Math.min(thisAncestors.length, thatAncestors.length);\n        for (let i = 0; i < minLength; ++i) {\n            const thisAncestor = thisAncestors[i];\n            const thatAncestor = thatAncestors[i];\n            if (thisAncestor !== thatAncestor) {\n                const lowestCommonAncestor = thisAncestors[i]._parent;\n                if (!lowestCommonAncestor)\n                    return 0;\n                const siblings = lowestCommonAncestor._children;\n                return siblings.indexOf(thisAncestor) < siblings.indexOf(thatAncestor) ? -1 : 1;\n            }\n        }\n        return thisAncestors.length < thatAncestors.length ? -1 : 1;\n    }\n    isChildOf(that) {\n        if (this.parent === that)\n            return true;\n        if (this.parent)\n            return this.parent.isChildOf(that);\n        return false;\n    }\n    sortChildren(fn) {\n        this._children.sort((a, b) => fn(a.value, b.value));\n    }\n    clone() {\n        return new Tree(this.value, this._children.map(_ => _.clone()));\n    }\n    *childrenAfter(reference) {\n        const length = this._children.length;\n        for (let i = this._children.indexOf(reference) + 1; i < length; ++i) {\n            yield this._children[i];\n        }\n    }\n    *childrenBefore(reference) {\n        for (let i = this._children.indexOf(reference) - 1; i >= 0; --i) {\n            yield this._children[i];\n        }\n    }\n    *previousSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenBefore(this);\n    }\n    *nextSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenAfter(this);\n    }\n    *descendants() {\n        for (const child of this._children) {\n            yield child;\n            yield* child.descendants();\n        }\n    }\n    *ancestors() {\n        if (this._parent) {\n            yield* this._parent.ancestors();\n            yield this._parent;\n        }\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=Tree.js.map","import { Tree } from \"ts-tree\";\nimport { Model } from \"./Model\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nconst isMac = navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n\nexport class HTMLView<V> {\n\tprivate readonly treeToHtmlEl: Map<Tree<V>, HTMLElement> = new Map();\n\tprivate readonly htmlElToTree: Map<HTMLElement, Tree<V>> = new Map();\n\tprivate cursorEl: HTMLElement | null = null;\n\tprivate mirrorEl?: HTMLElement;\n\tprivate overTree?: Tree<V>;\n\n\tconstructor(\n\t\tprivate readonly model: Model<V>,\n\t\tprivate readonly valueToHtmlEl: (v: V) => Node,\n\t\tprivate readonly rootUlEl: Node\n\t) {\n\t\tthis.bind();\n\t}\n\n\tbind() {\n\t\tthis.model.subscribe(this.handleModelEvent);\n\t\tdocument.addEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.addEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.addEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.addEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.addEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tunbind() {\n\t\tthis.model.unsubscribe(this.handleModelEvent);\n\t\tdocument.removeEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.removeEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.removeEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.removeEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.removeEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tprivate handleModelEvent = (e: ModelEvent<V>) => {\n\t\tswitch (e.type) {\n\t\t\tcase \"insert\": {\n\t\t\t\tconst newNodeEl = document.createElement(\"li\");\n\t\t\t\tnewNodeEl.appendChild(this.valueToHtmlEl(e.tree.value));\n\t\t\t\tconst childrenContainerEl = document.createElement(\"ul\");\n\t\t\t\tnewNodeEl.setAttribute(\"draggable\", \"true\");\n\t\t\t\tnewNodeEl.appendChild(childrenContainerEl);\n\t\t\t\tconst nextSiblingEl = e.tree.nextSibling\n\t\t\t\t\t? this.getHtmlEl(e.tree.nextSibling)\n\t\t\t\t\t: null;\n\t\t\t\tconst parentEl = e.tree.parent\n\t\t\t\t\t? this.getHtmlEl(e.tree.parent).childNodes[1]\n\t\t\t\t\t: this.rootUlEl;\n\t\t\t\tparentEl.insertBefore(newNodeEl, nextSiblingEl);\n\t\t\t\tthis.htmlElToTree.set(newNodeEl, e.tree);\n\t\t\t\tthis.treeToHtmlEl.set(e.tree, newNodeEl);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove\": {\n\t\t\t\tconst el = this.getHtmlEl(e.tree);\n\t\t\t\tif (!el.parentElement) {\n\t\t\t\t\tthrow new Error(\"Cannot remove root element\");\n\t\t\t\t}\n\t\t\t\tthis.htmlElToTree.delete(el);\n\t\t\t\tthis.treeToHtmlEl.delete(e.tree);\n\t\t\t\tel.parentElement.removeChild(el);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"add-to-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.add(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove-from-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.remove(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"move-cursor\": {\n\t\t\t\tif (this.cursorEl) {\n\t\t\t\t\tthis.cursorEl.classList.remove(\"cursor\");\n\t\t\t\t}\n\t\t\t\tif (e.tree) {\n\t\t\t\t\tthis.cursorEl = this.getHtmlEl(e.tree);\n\t\t\t\t\tthis.cursorEl.classList.add(\"cursor\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.cursorEl = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleMousedownEvent = (e: MouseEvent) => {\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (targetTree) {\n\t\t\t// If ctrl+shift are pressed, then default to calling it a ctrl\n\t\t\t// (MS defaults to shift, Dropbox to ctrl).\n\t\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t\tthis.model.selectToggle(targetTree);\n\t\t\t} else if (e.shiftKey) {\n\t\t\t\tthis.model.selectUntil(targetTree);\n\t\t\t} else {\n\t\t\t\tif (!this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.model.resetSelection();\n\t\t}\n\t};\n\n\tprivate handleMouseupEvent = (e: MouseEvent) => {\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tif (!e.ctrlKey && !e.metaKey && !e.shiftKey) {\n\t\t\t\tif (this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleKeyboardEvent = (e: KeyboardEvent) => {\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"a\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectAll();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.copy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.paste();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectPrev();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectNext();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.getHtmlEl(tree).classList.remove(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.getHtmlEl(tree).classList.add(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Delete\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.delete();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Backspace\":\n\t\t\t\t\tif (isMac) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.model.delete();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleDragstartEvent = (e: DragEvent) => {\n\t\te.dataTransfer.setData(\"text/html\", \"hello!!\");\n\t\te.dataTransfer.dropEffect = \"move\";\n\n\t\tconst target = this.getTarget(e);\n\t\tif (!target) return;\n\n\t\tthis.mirrorEl = document.createElement(\"ul\");\n\t\tthis.mirrorEl.classList.add(\"mirror\");\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tconst subtreeEl = this.getHtmlEl(subtree);\n\t\t\tthis.mirrorEl.appendChild(subtreeEl.cloneNode(true));\n\t\t}\n\t\tdocument.body.appendChild(this.mirrorEl);\n\t\te.dataTransfer.setDragImage(this.mirrorEl, 0, 0);\n\t};\n\n\tprivate handleDragenterEvent = (e: DragEvent) => {\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (this.overTree) {\n\t\t\tthis.getHtmlEl(this.overTree).classList.remove(\"over\");\n\t\t\tthis.overTree = undefined;\n\t\t}\n\t\tif (!targetTree || this.model.isLeaf(targetTree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tif (targetTree === subtree || targetTree.isChildOf(subtree)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.getHtmlEl(targetTree).classList.add(\"over\");\n\t\tthis.overTree = targetTree;\n\t};\n\n\tprivate handleDragendEvent = (e: DragEvent) => {\n\t\tif (this.mirrorEl) {\n\t\t\tthis.mirrorEl.remove();\n\t\t}\n\t\tif (this.overTree) {\n\t\t\tthis.model.insertAllIn(this.overTree, this.model.selectedSubtrees);\n\t\t\tthis.getHtmlEl(this.overTree).classList.remove(\"over\");\n\t\t\tthis.overTree = undefined;\n\t\t}\n\t};\n\n\tprivate getTarget(e: Event): Tree<V> | undefined {\n\t\tif (e.target instanceof Node) {\n\t\t\tfor (let current: Node | null = e.target; current; current = current.parentNode) {\n\t\t\t\tif (current instanceof HTMLElement) {\n\t\t\t\t\tconst tree = this.htmlElToTree.get(current);\n\t\t\t\t\tif (tree) {\n\t\t\t\t\t\treturn tree;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getHtmlEl(tree: Tree<V>): HTMLElement {\n\t\tconst result = this.treeToHtmlEl.get(tree);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getNode(el: HTMLElement): Tree<V> {\n\t\tconst result = this.htmlElToTree.get(el);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n}\n","import { PubSub } from \"ts-pubsub\";\nimport { Tree } from \"ts-tree\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nexport class Model<V> {\n\tprivate clipboard: Tree<V>[] = [];\n\tprivate selection: Set<Tree<V>> = new Set();\n\tprivate cursor?: Tree<V>;\n\tprivate pubsub: PubSub<ModelEvent<V>> = new PubSub();\n\n\tconstructor(\n\t\treadonly root: Tree<V>,\n\t\treadonly isLeaf: (tree: Tree<V>) => boolean,\n\t\treadonly sort: (a: V, b: V) => number\n\t) {}\n\n\tsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.subscribe(fn);\n\t\tthis.emitTree(this.root);\n\t}\n\n\tunsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.unsubscribe(fn);\n\t}\n\n\tget sortedSelection() {\n\t\tconst result = [...this.selection];\n\t\tresult.sort((a, b) => a.isBefore(b));\n\t\treturn result;\n\t}\n\n\tget selectedSubtrees() {\n\t\tconst result = [];\n\t\tlet last: Tree<V> | null = null;\n\t\tfor (const node of this.sortedSelection) {\n\t\t\tif (!last || !node.isChildOf(last)) {\n\t\t\t\tresult.push(node);\n\t\t\t\tlast = node;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tisSelected(tree: Tree<V>) {\n\t\treturn this.selection.has(tree);\n\t}\n\n\tisOnlySelected(tree: Tree<V>) {\n\t\treturn this.selection.size === 1 && this.selection.has(tree);\n\t}\n\n\tselectOne(tree?: Tree<V>) {\n\t\tif (tree && this.selection.size === 1 && this.selection.has(tree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tif (!tree) {\n\t\t\tthis.ensureValidCursor();\n\t\t\treturn;\n\t\t}\n\t\tthis.addToSelection(tree);\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectPrev() {\n\t\tif (this.cursor && this.cursor.previous) this.selectOne(this.cursor.previous);\n\t}\n\n\tselectNext() {\n\t\tif (this.cursor && this.cursor.next) this.selectOne(this.cursor.next);\n\t}\n\n\tselectToggle(tree: Tree<V>) {\n\t\tif (this.selection.has(tree)) {\n\t\t\tthis.unselect(tree);\n\t\t} else {\n\t\t\tthis.addToSelection(tree);\n\t\t\tthis.setCursor(tree);\n\t\t}\n\t}\n\n\tselectUntil(tree: Tree<V>) {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tconst isBefore = tree.isBefore(this.cursor) < 0;\n\t\tlet current: Tree<V> | undefined = isBefore ? tree : this.cursor.next;\n\t\tconst end: Tree<V> | undefined = isBefore ? this.cursor : tree.next;\n\t\twhile (current && current !== end) {\n\t\t\tthis.addToSelection(current);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectAll() {\n\t\tfor (let current: Tree<V> | undefined = this.root; current; current = current.next) {\n\t\t\tthis.addToSelection(current);\n\t\t}\n\t}\n\n\tresetSelection() {\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t}\n\n\tunselect(target: Tree<V>) {\n\t\tthis.removeFromSelection(target);\n\t\tthis.ensureValidCursor();\n\t}\n\n\tcopy(): void {\n\t\tthis.clipboard = this.selectedSubtrees.map(t => t.clone());\n\t}\n\n\tpaste(): void {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllIn(this.cursor, this.clipboard.map(t => t.clone()));\n\t}\n\n\tinsertAllIn(target: Tree<V>, trees: Tree<V>[]) {\n\t\tconst isLeaf = this.isLeaf(target);\n\t\tconst parent = isLeaf ? target.parent : target;\n\t\tconst previousSibling = isLeaf ? target : undefined;\n\t\tif (!parent) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const tree of trees.reverse()) {\n\t\t\tif (tree.root === this.root) {\n\t\t\t\tthis.remove(tree);\n\t\t\t}\n\t\t\tthis.insertAfter(parent, previousSibling, tree);\n\t\t}\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tdelete(): void {\n\t\tfor (const tree of this.selectedSubtrees) {\n\t\t\tthis.remove(tree);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tprivate insertAfter(parent: Tree<V>, reference: Tree<V> | undefined, tree: Tree<V>) {\n\t\tconst firstLarger = parent.children.find(child => this.sort(child.value, tree.value) > 0);\n\t\tparent.insertBefore(firstLarger, tree);\n\t\tthis.pubsub.emit({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild);\n\t}\n\n\tprivate remove(tree: Tree<V>) {\n\t\tthis.removeFromSelection(tree);\n\t\ttree.remove();\n\t\tthis.pubsub.emit({ type: \"remove\", tree });\n\t}\n\n\tprivate addToSelection(tree: Tree<V>) {\n\t\tif (!this.selection.has(tree)) {\n\t\t\tthis.selection.add(tree);\n\t\t\tthis.pubsub.emit({ type: \"add-to-selection\", tree });\n\t\t}\n\t}\n\n\tprivate removeFromSelection(tree: Tree<V>) {\n\t\tif (this.selection.delete(tree)) {\n\t\t\tthis.pubsub.emit({ type: \"remove-from-selection\", tree });\n\t\t}\n\t}\n\n\tprivate setCursor(tree?: Tree<V>) {\n\t\tif (tree !== this.cursor) {\n\t\t\tthis.pubsub.emit({ type: \"move-cursor\", tree });\n\t\t}\n\t\tthis.cursor = tree;\n\t}\n\n\tprivate ensureValidCursor() {\n\t\tif (this.cursor && this.cursor.root !== this.root) {\n\t\t\tconst first = this.selection.values().next();\n\t\t\tthis.setCursor(first.done ? undefined : first.value);\n\t\t} else {\n\t\t\tthis.setCursor(undefined);\n\t\t}\n\t}\n\n\tprivate emitTree(tree?: Tree<V>) {\n\t\tif (!tree) {\n\t\t\treturn;\n\t\t}\n\t\tthis.emitTree(tree.nextSibling);\n\t\tthis.pubsub.emit({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild);\n\t}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PubSub {\n    constructor() {\n        this.handlers = new Set();\n    }\n    subscribe(fn) {\n        this.handlers.add(fn);\n    }\n    unsubscribe(fn) {\n        this.handlers.delete(fn);\n    }\n    emit(event) {\n        for (const fn of this.handlers) {\n            fn(event);\n        }\n    }\n}\nexports.PubSub = PubSub;\n//# sourceMappingURL=PubSub.js.map"],"sourceRoot":""}