{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./demo/app.ts","webpack:///./node_modules/ts-tree/build/Tree.js","webpack:///./src/HTMLView.ts","webpack:///./src/Model.ts","webpack:///./node_modules/ts-pubsub/build/PubSub.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ts_tree_1","HTMLView_1","Model_1","tree","Tree","tree2","model","Model","a","b","outputEl","document","getElementById","HTMLView","v","text","createTextNode","toString","containerEl","createElement","appendChild","addEventListener","e","newValue","prompt","setValue","parseInt","setRoot","[object Object]","children","this","_children","child","remove","_parent","json","map","fromJSON","length","toJSON","parent","root","nextSibling","indexOf","previousSibling","firstChild","lastChild","previous","lastDescendant","next","parentNext","newTree","insertAfter","insertBefore","removeChild","undefined","reference","index","splice","that","thisAncestors","ancestors","thatAncestors","minLength","Math","min","thisAncestor","thatAncestor","lowestCommonAncestor","siblings","isChildOf","fn","sort","_","clone","childrenBefore","childrenAfter","descendants","isMac","navigator","platform","toUpperCase","valueToHtmlEl","rootUlEl","treeToHtmlEl","Map","htmlElToTree","cursorEl","handleModelEvent","type","getParentEl","createTreeEl","getNextSiblingEl","removeTreeEl","getHtmlEl","classList","add","handleMousedownEvent","targetTree","getTarget","clickedEl","setAttribute","ctrlKey","metaKey","selectToggle","shiftKey","selectUntil","isSelected","selectOne","handleMouseupEvent","removeAttribute","handleClickEvent","resetSelection","handleKeyboardEvent","preventDefault","selectAll","copy","paste","selectPrev","selectNext","selectedSubtrees","delete","handleDragstartEvent","dataTransfer","setData","dropEffect","mirrorEl","subtree","subtreeEl","cloneNode","body","setDragImage","handleDragenterEvent","dragoverTree","isLeaf","handleDragendEvent","insertAllIn","subscribe","unsubscribe","removeEventListener","target","Node","current","parentNode","HTMLElement","treeEl","childrenContainerEl","set","childNodes","result","Error","el","ts_pubsub_1","clipboard","selection","Set","pubsub","PubSub","emitTree","sortedSelection","isBefore","last","node","push","has","size","isOnlySelected","removeFromSelection","addToSelection","setCursor","ensureValidCursor","cursor","unselect","end","trees","insertAllAfter","reverse","emit","setValueOf","newRoot","firstLarger","find","handlers","event"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Tree } from \"ts-tree\";\nimport { HTMLView } from \"../src/HTMLView\";\nimport { Model } from \"../src/Model\";\n\nconst tree = new Tree(1, [\n\tnew Tree(2, [new Tree(3, [new Tree(4)])]),\n\tnew Tree(5),\n\tnew Tree(6),\n\tnew Tree(7)\n]);\n\nconst tree2 = new Tree(9, [new Tree(10)]);\n\nconst model = new Model<number>(tree, t => false, (a, b) => (a < b ? -1 : a > b ? 1 : 0));\nconst toHtml = (v: number) => {\n\tconst text = document.createTextNode(v.toString());\n\tconst containerEl = document.createElement(\"div\");\n\tcontainerEl.appendChild(text);\n\treturn containerEl;\n};\nconst outputEl = document.getElementById(\"output\") as HTMLElement;\nconst view = new HTMLView<number>(model, toHtml, outputEl);\n\nconst changeValueButton = document.getElementById(\"change-value\") as HTMLElement;\nchangeValueButton.addEventListener(\"click\", e => {\n\tconst newValue = prompt(\"Please enter a new value\");\n\tif (newValue) {\n\t\tmodel.setValue(parseInt(newValue));\n\t}\n});\n\nconst changeRootButton = document.getElementById(\"change-root\") as HTMLElement;\nchangeRootButton.addEventListener(\"click\", e => {\n\tmodel.setRoot(tree2);\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Tree {\n    constructor(value, children = []) {\n        this.value = value;\n        this._children = children;\n        for (const child of children) {\n            child.remove();\n            child._parent = this;\n        }\n    }\n    static fromJSON(json) {\n        return new Tree(json.value, (json.children || []).map(Tree.fromJSON));\n    }\n    toJSON() {\n        if (this._children.length > 0) {\n            return {\n                value: this.value,\n                children: this._children.map(child => child.toJSON())\n            };\n        }\n        return { value: this.value };\n    }\n    get children() {\n        return this._children;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get root() {\n        return this._parent ? this._parent.root : this;\n    }\n    get nextSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) + 1];\n    }\n    get previousSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) - 1];\n    }\n    get firstChild() {\n        return this._children[0];\n    }\n    get lastChild() {\n        return this._children[this._children.length - 1];\n    }\n    get previous() {\n        const previousSibling = this.previousSibling;\n        if (previousSibling)\n            return previousSibling.lastDescendant || previousSibling;\n        return this._parent;\n    }\n    get lastDescendant() {\n        const lastChild = this.lastChild;\n        if (lastChild)\n            return lastChild.lastDescendant || lastChild;\n    }\n    get next() {\n        return this.firstChild || this.nextSibling || this.parentNext;\n    }\n    get parentNext() {\n        if (this._parent)\n            return this._parent.nextSibling || this._parent.parentNext;\n    }\n    after(newTree) {\n        if (this._parent)\n            return this._parent.insertAfter(this, newTree);\n    }\n    before(newTree) {\n        if (this._parent)\n            return this._parent.insertBefore(this, newTree);\n    }\n    remove() {\n        if (this._parent)\n            return this._parent.removeChild(this);\n    }\n    appendChild(newTree) {\n        return this.insertBefore(undefined, newTree);\n    }\n    insertAfter(reference, newTree) {\n        return this.insertBefore(reference ? reference.nextSibling : this.firstChild, newTree);\n    }\n    insertBefore(reference, newTree) {\n        const index = reference ? this._children.indexOf(reference) : this._children.length;\n        if (index >= 0) {\n            newTree.remove();\n            this._children.splice(index, 0, newTree);\n            newTree._parent = this;\n            return newTree;\n        }\n    }\n    removeChild(child) {\n        const index = this._children.indexOf(child);\n        if (index >= 0) {\n            this._children.splice(index, 1);\n            child._parent = undefined;\n            return child;\n        }\n    }\n    isBefore(that) {\n        if (this === that)\n            return 0;\n        const thisAncestors = [...this.ancestors(), this];\n        const thatAncestors = [...that.ancestors(), that];\n        const minLength = Math.min(thisAncestors.length, thatAncestors.length);\n        for (let i = 0; i < minLength; ++i) {\n            const thisAncestor = thisAncestors[i];\n            const thatAncestor = thatAncestors[i];\n            if (thisAncestor !== thatAncestor) {\n                const lowestCommonAncestor = thisAncestors[i]._parent;\n                if (!lowestCommonAncestor)\n                    return 0;\n                const siblings = lowestCommonAncestor._children;\n                return siblings.indexOf(thisAncestor) < siblings.indexOf(thatAncestor) ? -1 : 1;\n            }\n        }\n        return thisAncestors.length < thatAncestors.length ? -1 : 1;\n    }\n    isChildOf(that) {\n        if (this.parent === that)\n            return true;\n        if (this.parent)\n            return this.parent.isChildOf(that);\n        return false;\n    }\n    sortChildren(fn) {\n        this._children.sort((a, b) => fn(a.value, b.value));\n    }\n    clone() {\n        return new Tree(this.value, this._children.map(_ => _.clone()));\n    }\n    *childrenAfter(reference) {\n        const length = this._children.length;\n        for (let i = this._children.indexOf(reference) + 1; i < length; ++i) {\n            yield this._children[i];\n        }\n    }\n    *childrenBefore(reference) {\n        for (let i = this._children.indexOf(reference) - 1; i >= 0; --i) {\n            yield this._children[i];\n        }\n    }\n    *previousSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenBefore(this);\n    }\n    *nextSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenAfter(this);\n    }\n    *descendants() {\n        for (const child of this._children) {\n            yield child;\n            yield* child.descendants();\n        }\n    }\n    *ancestors() {\n        if (this._parent) {\n            yield* this._parent.ancestors();\n            yield this._parent;\n        }\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=Tree.js.map","import { Tree } from \"ts-tree\";\nimport { Model } from \"./Model\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nconst isBrowser = typeof navigator === \"undefined\";\nconst isMac = isBrowser ? false : navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n\nexport class HTMLView<V> {\n\tprivate readonly treeToHtmlEl: Map<Tree<V>, HTMLElement> = new Map();\n\tprivate readonly htmlElToTree: Map<HTMLElement, Tree<V>> = new Map();\n\tprivate cursorEl: HTMLElement | null = null;\n\tprivate mirrorEl?: HTMLElement;\n\tprivate clickedEl?: HTMLElement;\n\tprivate dragoverTree?: Tree<V>;\n\n\tconstructor(\n\t\tprivate readonly model: Model<V>,\n\t\tprivate readonly valueToHtmlEl: (v: V) => Node,\n\t\tprivate readonly rootUlEl: Node\n\t) {\n\t\tthis.bind();\n\t}\n\n\tbind() {\n\t\tthis.model.subscribe(this.handleModelEvent);\n\t\tdocument.addEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.addEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.addEventListener(\"click\", this.handleClickEvent);\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.addEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.addEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.addEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tunbind() {\n\t\tthis.model.unsubscribe(this.handleModelEvent);\n\t\tdocument.removeEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.removeEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.removeEventListener(\"click\", this.handleClickEvent);\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.removeEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.removeEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.removeEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tprivate handleModelEvent = (e: ModelEvent<V>) => {\n\t\tswitch (e.type) {\n\t\t\tcase \"insert\": {\n\t\t\t\tconst parentEl = this.getParentEl(e.tree);\n\t\t\t\tparentEl.insertBefore(this.createTreeEl(e.tree), this.getNextSiblingEl(e.tree));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove\": {\n\t\t\t\tthis.removeTreeEl(e.tree);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"add-to-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.add(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove-from-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.remove(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"move-cursor\": {\n\t\t\t\tif (this.cursorEl) {\n\t\t\t\t\tthis.cursorEl.classList.remove(\"cursor\");\n\t\t\t\t}\n\t\t\t\tif (e.tree) {\n\t\t\t\t\tthis.cursorEl = this.getHtmlEl(e.tree);\n\t\t\t\t\tthis.cursorEl.classList.add(\"cursor\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.cursorEl = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleMousedownEvent = (e: MouseEvent) => {\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tthis.clickedEl = this.getHtmlEl(targetTree);\n\t\t\tthis.clickedEl.setAttribute(\"draggable\", \"true\");\n\n\t\t\t// If ctrl+shift are pressed, then default to calling it a ctrl\n\t\t\t// (MS defaults to shift, Dropbox to ctrl).\n\t\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t\tthis.model.selectToggle(targetTree);\n\t\t\t} else if (e.shiftKey) {\n\t\t\t\tthis.model.selectUntil(targetTree);\n\t\t\t} else {\n\t\t\t\tif (!this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleMouseupEvent = (e: MouseEvent) => {\n\t\tif (this.clickedEl) {\n\t\t\tthis.clickedEl.removeAttribute(\"draggable\");\n\t\t}\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tif (!e.ctrlKey && !e.metaKey && !e.shiftKey) {\n\t\t\t\tif (this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleClickEvent = (e: MouseEvent) => {\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (!this.getTarget(e)) {\n\t\t\tthis.model.resetSelection();\n\t\t}\n\t};\n\n\tprivate handleKeyboardEvent = (e: KeyboardEvent) => {\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"a\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectAll();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.copy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.paste();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectPrev();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectNext();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.getHtmlEl(tree).classList.remove(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.getHtmlEl(tree).classList.add(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Delete\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.delete();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Backspace\":\n\t\t\t\t\tif (isMac) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.model.delete();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleDragstartEvent = (e: DragEvent) => {\n\t\te.dataTransfer.setData(\"text/html\", \"\");\n\t\te.dataTransfer.dropEffect = \"move\";\n\n\t\tconst target = this.getTarget(e);\n\t\tif (!target) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mirrorEl = document.createElement(\"ul\");\n\t\tthis.mirrorEl.classList.add(\"mirror\");\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tconst subtreeEl = this.getHtmlEl(subtree);\n\t\t\tthis.mirrorEl.appendChild(subtreeEl.cloneNode(true));\n\t\t}\n\t\tdocument.body.appendChild(this.mirrorEl);\n\t\te.dataTransfer.setDragImage(this.mirrorEl, 0, 0);\n\t};\n\n\tprivate handleDragenterEvent = (e: DragEvent) => {\n\t\tconst targetTree = this.getTarget(e);\n\t\tif (this.dragoverTree) {\n\t\t\tthis.getHtmlEl(this.dragoverTree).classList.remove(\"over\");\n\t\t\tthis.dragoverTree = undefined;\n\t\t}\n\t\tif (!targetTree || this.model.isLeaf(targetTree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tif (targetTree === subtree || targetTree.isChildOf(subtree)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.getHtmlEl(targetTree).classList.add(\"over\");\n\t\tthis.dragoverTree = targetTree;\n\t};\n\n\tprivate handleDragendEvent = (e: DragEvent) => {\n\t\tif (this.mirrorEl) {\n\t\t\tthis.mirrorEl.remove();\n\t\t}\n\t\tif (this.dragoverTree) {\n\t\t\tthis.model.insertAllIn(this.dragoverTree, ...this.model.selectedSubtrees);\n\t\t\tthis.getHtmlEl(this.dragoverTree).classList.remove(\"over\");\n\t\t\tthis.dragoverTree = undefined;\n\t\t}\n\t};\n\n\tprivate getTarget(e: Event): Tree<V> | undefined {\n\t\tif (e.target instanceof Node) {\n\t\t\tfor (let current: Node | null = e.target; current; current = current.parentNode) {\n\t\t\t\tif (current instanceof HTMLElement) {\n\t\t\t\t\tconst tree = this.htmlElToTree.get(current);\n\t\t\t\t\tif (tree) {\n\t\t\t\t\t\treturn tree;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createTreeEl(tree: Tree<V>) {\n\t\tconst treeEl = document.createElement(\"li\");\n\t\ttreeEl.appendChild(this.valueToHtmlEl(tree.value));\n\t\tconst childrenContainerEl = document.createElement(\"ul\");\n\t\ttreeEl.appendChild(childrenContainerEl);\n\t\tthis.htmlElToTree.set(treeEl, tree);\n\t\tthis.treeToHtmlEl.set(tree, treeEl);\n\t\treturn treeEl;\n\t}\n\n\tprivate removeTreeEl(tree: Tree<V>) {\n\t\tconst treeEl = this.getHtmlEl(tree);\n\t\tthis.htmlElToTree.delete(treeEl);\n\t\tthis.treeToHtmlEl.delete(tree);\n\t\ttreeEl.remove();\n\t}\n\n\tprivate getNextSiblingEl(tree: Tree<V>): Node | null {\n\t\treturn tree.nextSibling ? this.getHtmlEl(tree.nextSibling) : null;\n\t}\n\n\tprivate getParentEl(tree: Tree<V>): Node {\n\t\treturn tree.parent ? this.getHtmlEl(tree.parent).childNodes[1] : this.rootUlEl;\n\t}\n\n\tprivate getHtmlEl(tree: Tree<V>): HTMLElement {\n\t\tconst result = this.treeToHtmlEl.get(tree);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getNode(el: HTMLElement): Tree<V> {\n\t\tconst result = this.htmlElToTree.get(el);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n}\n","import { PubSub } from \"ts-pubsub\";\nimport { Tree } from \"ts-tree\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nexport class Model<V> {\n\tprivate clipboard: Tree<V>[] = [];\n\tprivate selection: Set<Tree<V>> = new Set();\n\tprivate cursor?: Tree<V>;\n\tprivate pubsub: PubSub<ModelEvent<V>> = new PubSub();\n\n\tconstructor(\n\t\tprivate root: Tree<V>,\n\t\treadonly isLeaf: (tree: Tree<V>) => boolean,\n\t\treadonly sort?: (a: V, b: V) => number\n\t) {}\n\n\tsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.subscribe(fn);\n\t\tthis.emitTree(this.root);\n\t}\n\n\tunsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.unsubscribe(fn);\n\t}\n\n\tget sortedSelection() {\n\t\tconst result = [...this.selection];\n\t\tresult.sort((a, b) => a.isBefore(b));\n\t\treturn result;\n\t}\n\n\tget selectedSubtrees() {\n\t\tconst result = [];\n\t\tlet last: Tree<V> | null = null;\n\t\tfor (const node of this.sortedSelection) {\n\t\t\tif (!last || !node.isChildOf(last)) {\n\t\t\t\tresult.push(node);\n\t\t\t\tlast = node;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tisSelected(tree: Tree<V>) {\n\t\treturn this.selection.has(tree);\n\t}\n\n\tisOnlySelected(tree: Tree<V>) {\n\t\treturn this.selection.size === 1 && this.selection.has(tree);\n\t}\n\n\tselectOne(tree?: Tree<V>) {\n\t\tif (tree && this.isOnlySelected(tree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tif (!tree) {\n\t\t\tthis.ensureValidCursor();\n\t\t\treturn;\n\t\t}\n\t\tthis.addToSelection(tree);\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectPrev() {\n\t\tif (this.cursor && this.cursor.previous) {\n\t\t\tthis.selectOne(this.cursor.previous);\n\t\t}\n\t}\n\n\tselectNext() {\n\t\tif (this.cursor && this.cursor.next) {\n\t\t\tthis.selectOne(this.cursor.next);\n\t\t}\n\t}\n\n\tselectToggle(tree: Tree<V>) {\n\t\tif (this.selection.has(tree)) {\n\t\t\tthis.unselect(tree);\n\t\t} else {\n\t\t\tthis.addToSelection(tree);\n\t\t\tthis.setCursor(tree);\n\t\t}\n\t}\n\n\tselectUntil(tree: Tree<V>) {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tconst isBefore = tree.isBefore(this.cursor) < 0;\n\t\tlet current: Tree<V> | undefined = isBefore ? tree : this.cursor.next;\n\t\tconst end: Tree<V> | undefined = isBefore ? this.cursor : tree.next;\n\t\twhile (current && current !== end) {\n\t\t\tthis.addToSelection(current);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectAll() {\n\t\tfor (let current: Tree<V> | undefined = this.root; current; current = current.next) {\n\t\t\tthis.addToSelection(current);\n\t\t}\n\t}\n\n\tresetSelection() {\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t}\n\n\tunselect(target: Tree<V>) {\n\t\tthis.removeFromSelection(target);\n\t\tthis.ensureValidCursor();\n\t}\n\n\tcopy(): void {\n\t\tthis.clipboard = this.selectedSubtrees.map(t => t.clone());\n\t}\n\n\tpaste(): void {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllIn(this.cursor, ...this.clipboard.map(t => t.clone()));\n\t}\n\n\tinsertAll(...trees: Tree<V>[]) {\n\t\tif (this.cursor) {\n\t\t\treturn this.insertAllIn(this.cursor, ...trees);\n\t\t}\n\t}\n\n\tinsertAllIn(target: Tree<V>, ...trees: Tree<V>[]) {\n\t\tconst isLeaf = this.isLeaf(target);\n\t\tconst parent = isLeaf ? target.parent : target;\n\t\tconst previousSibling = isLeaf ? target : undefined;\n\t\tif (!parent) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllAfter(parent, previousSibling, ...trees);\n\t}\n\n\tinsertAllAfter(parent: Tree<V>, previousSibling: Tree<V> | undefined, ...trees: Tree<V>[]) {\n\t\tfor (const tree of trees.reverse()) {\n\t\t\tif (tree.root === this.root) {\n\t\t\t\tthis.remove(tree);\n\t\t\t}\n\t\t\tthis.insertAfter(parent, previousSibling, tree);\n\t\t}\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tdelete(): void {\n\t\tfor (const tree of this.selectedSubtrees) {\n\t\t\tthis.remove(tree);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tsetValue(newValue: V) {\n\t\tif (this.cursor) {\n\t\t\treturn this.setValueOf(this.cursor, newValue);\n\t\t}\n\t}\n\n\tsetValueOf(tree: Tree<V>, newValue: V) {\n\t\tconst parent = tree.parent;\n\t\tif (!parent) {\n\t\t\treturn;\n\t\t}\n\t\tthis.remove(tree);\n\t\ttree.value = newValue;\n\t\tthis.insertAllIn(parent, tree);\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tsetRoot(newRoot: Tree<V>) {\n\t\tthis.remove(this.root);\n\t\tthis.root = newRoot;\n\t\tthis.emitTree(newRoot);\n\t\tthis.ensureValidCursor();\n\t}\n\n\tprivate insertAfter(parent: Tree<V>, reference: Tree<V> | undefined, tree: Tree<V>) {\n\t\tif (this.sort) {\n\t\t\tconst sort = this.sort; // TS hack\n\t\t\tconst firstLarger = parent.children.find(child => sort(child.value, tree.value) > 0);\n\t\t\tparent.insertBefore(firstLarger, tree);\n\t\t} else {\n\t\t\tparent.insertAfter(reference, tree);\n\t\t}\n\t\tthis.pubsub.emit({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild);\n\t}\n\n\tprivate remove(tree: Tree<V>) {\n\t\tthis.removeFromSelection(tree);\n\t\ttree.remove();\n\t\tthis.pubsub.emit({ type: \"remove\", tree });\n\t}\n\n\tprivate addToSelection(tree: Tree<V>) {\n\t\tif (!this.selection.has(tree)) {\n\t\t\tthis.selection.add(tree);\n\t\t\tthis.pubsub.emit({ type: \"add-to-selection\", tree });\n\t\t}\n\t}\n\n\tprivate removeFromSelection(tree: Tree<V>) {\n\t\tif (this.selection.delete(tree)) {\n\t\t\tthis.pubsub.emit({ type: \"remove-from-selection\", tree });\n\t\t}\n\t}\n\n\tprivate setCursor(tree?: Tree<V>) {\n\t\tif (tree !== this.cursor) {\n\t\t\tthis.pubsub.emit({ type: \"move-cursor\", tree });\n\t\t}\n\t\tthis.cursor = tree;\n\t}\n\n\tprivate ensureValidCursor() {\n\t\tif (this.cursor && this.cursor.root !== this.root) {\n\t\t\tthis.setCursor(undefined);\n\t\t}\n\t}\n\n\tprivate emitTree(tree?: Tree<V>) {\n\t\tif (!tree) {\n\t\t\treturn;\n\t\t}\n\t\tthis.emitTree(tree.nextSibling);\n\t\tthis.pubsub.emit({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild);\n\t}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PubSub {\n    constructor() {\n        this.handlers = new Set();\n    }\n    subscribe(fn) {\n        this.handlers.add(fn);\n    }\n    unsubscribe(fn) {\n        this.handlers.delete(fn);\n    }\n    emit(event) {\n        for (const fn of this.handlers) {\n            fn(event);\n        }\n    }\n}\nexports.PubSub = PubSub;\n//# sourceMappingURL=PubSub.js.map"],"sourceRoot":""}