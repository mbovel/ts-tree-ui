{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./demo/app.ts","webpack:///./node_modules/ts-tree/build/Tree.js","webpack:///./src/View.ts","webpack:///./src/Model.ts","webpack:///./node_modules/ts-pubsub/build/PubSub.js","webpack:///./src/Controller.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ts_tree_1","View_1","Model_1","tree","Tree","tree2","model","Model","a","b","outputEl","document","getElementById","View","v","text","createTextNode","toString","containerEl","createElement","appendChild","init","addEventListener","e","newValue","prompt","setValue","parseInt","setRoot","[object Object]","children","this","_children","child","remove","_parent","json","map","fromJSON","length","toJSON","parent","root","nextSibling","indexOf","previousSibling","firstChild","lastChild","previous","lastDescendant","next","parentNext","newTree","insertAfter","insertBefore","removeChild","undefined","reference","index","splice","that","thisAncestors","ancestors","thatAncestors","minLength","Math","min","thisAncestor","thatAncestor","lowestCommonAncestor","siblings","isChildOf","fn","sort","_","clone","childrenBefore","childrenAfter","descendants","Controller_1","valueToHtmlEl","rootUlEl","treeToHtmlEl","Map","htmlElToTree","cursorEl","handleModelEvent","type","getParentEl","createTreeEl","getNextSiblingEl","removeTreeEl","getHtmlEl","classList","add","controller","Controller","bindModel","bindController","subscribe","emitAllInserts","unsubscribe","unbind","treeEl","childrenContainerEl","set","delete","childNodes","result","Error","el","target","Node","current","parentNode","HTMLElement","ts_pubsub_1","isLeaf","clipboard","selection","Set","pubsub","PubSub","emitTree","sortedSelection","isBefore","selectedSubtrees","last","node","push","has","size","isOnlySelected","removeFromSelection","addToSelection","setCursor","ensureValidCursor","cursor","selectOne","unselect","end","insertAllIn","trees","insertAllAfter","reverse","emit","setValueOf","newRoot","firstLarger","find","first","values","done","handlers","event","isMac","navigator","platform","toUpperCase","view","handleMousedownEvent","targetTree","getTarget","clickedEl","setAttribute","ctrlKey","metaKey","selectToggle","shiftKey","selectUntil","isSelected","handleMouseupEvent","removeAttribute","handleClickEvent","resetSelection","handleKeyboardEvent","preventDefault","selectAll","copy","paste","selectPrev","selectNext","handleDragstartEvent","dataTransfer","setData","dropEffect","mirrorEl","subtree","subtreeEl","cloneNode","body","setDragImage","handleDragenterEvent","dragoverTree","handleDragendEvent","removeEventListener"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Tree } from \"ts-tree\";\nimport { View } from \"../src/View\";\nimport { Model } from \"../src/Model\";\n\nconst tree = new Tree(1, [\n\tnew Tree(2, [new Tree(3, [new Tree(4)])]),\n\tnew Tree(5),\n\tnew Tree(6),\n\tnew Tree(7)\n]);\n\nconst tree2 = new Tree(9, [new Tree(10)]);\n\nconst model = new Model<number>(tree, t => false, (a, b) => (a < b ? -1 : a > b ? 1 : 0));\nconst toHtml = (v: number) => {\n\tconst text = document.createTextNode(v.toString());\n\tconst containerEl = document.createElement(\"div\");\n\tcontainerEl.appendChild(text);\n\treturn containerEl;\n};\nconst outputEl = document.getElementById(\"output\") as HTMLElement;\nconst view = new View<number>(model, toHtml, outputEl);\nview.init();\n\nconst changeValueButton = document.getElementById(\"change-value\") as HTMLElement;\nchangeValueButton.addEventListener(\"click\", e => {\n\tconst newValue = prompt(\"Please enter a new value\");\n\tif (newValue) {\n\t\tmodel.setValue(parseInt(newValue));\n\t}\n});\n\nconst changeRootButton = document.getElementById(\"change-root\") as HTMLElement;\nchangeRootButton.addEventListener(\"click\", e => {\n\tmodel.setRoot(tree2);\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Tree {\n    constructor(value, children = []) {\n        this.value = value;\n        this._children = children;\n        for (const child of children) {\n            child.remove();\n            child._parent = this;\n        }\n    }\n    static fromJSON(json) {\n        return new Tree(json.value, (json.children || []).map(Tree.fromJSON));\n    }\n    toJSON() {\n        if (this._children.length > 0) {\n            return {\n                value: this.value,\n                children: this._children.map(child => child.toJSON())\n            };\n        }\n        return { value: this.value };\n    }\n    get children() {\n        return this._children;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get root() {\n        return this._parent ? this._parent.root : this;\n    }\n    get nextSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) + 1];\n    }\n    get previousSibling() {\n        if (this._parent)\n            return this._parent._children[this._parent._children.indexOf(this) - 1];\n    }\n    get firstChild() {\n        return this._children[0];\n    }\n    get lastChild() {\n        return this._children[this._children.length - 1];\n    }\n    get previous() {\n        const previousSibling = this.previousSibling;\n        if (previousSibling)\n            return previousSibling.lastDescendant || previousSibling;\n        return this._parent;\n    }\n    get lastDescendant() {\n        const lastChild = this.lastChild;\n        if (lastChild)\n            return lastChild.lastDescendant || lastChild;\n    }\n    get next() {\n        return this.firstChild || this.nextSibling || this.parentNext;\n    }\n    get parentNext() {\n        if (this._parent)\n            return this._parent.nextSibling || this._parent.parentNext;\n    }\n    after(newTree) {\n        if (this._parent)\n            return this._parent.insertAfter(this, newTree);\n    }\n    before(newTree) {\n        if (this._parent)\n            return this._parent.insertBefore(this, newTree);\n    }\n    remove() {\n        if (this._parent)\n            return this._parent.removeChild(this);\n    }\n    appendChild(newTree) {\n        return this.insertBefore(undefined, newTree);\n    }\n    insertAfter(reference, newTree) {\n        return this.insertBefore(reference ? reference.nextSibling : this.firstChild, newTree);\n    }\n    insertBefore(reference, newTree) {\n        const index = reference ? this._children.indexOf(reference) : this._children.length;\n        if (index >= 0) {\n            newTree.remove();\n            this._children.splice(index, 0, newTree);\n            newTree._parent = this;\n            return newTree;\n        }\n    }\n    removeChild(child) {\n        const index = this._children.indexOf(child);\n        if (index >= 0) {\n            this._children.splice(index, 1);\n            child._parent = undefined;\n            return child;\n        }\n    }\n    isBefore(that) {\n        if (this === that)\n            return 0;\n        const thisAncestors = [...this.ancestors(), this];\n        const thatAncestors = [...that.ancestors(), that];\n        const minLength = Math.min(thisAncestors.length, thatAncestors.length);\n        for (let i = 0; i < minLength; ++i) {\n            const thisAncestor = thisAncestors[i];\n            const thatAncestor = thatAncestors[i];\n            if (thisAncestor !== thatAncestor) {\n                const lowestCommonAncestor = thisAncestors[i]._parent;\n                if (!lowestCommonAncestor)\n                    return 0;\n                const siblings = lowestCommonAncestor._children;\n                return siblings.indexOf(thisAncestor) < siblings.indexOf(thatAncestor) ? -1 : 1;\n            }\n        }\n        return thisAncestors.length < thatAncestors.length ? -1 : 1;\n    }\n    isChildOf(that) {\n        if (this.parent === that)\n            return true;\n        if (this.parent)\n            return this.parent.isChildOf(that);\n        return false;\n    }\n    sortChildren(fn) {\n        this._children.sort((a, b) => fn(a.value, b.value));\n    }\n    clone() {\n        return new Tree(this.value, this._children.map(_ => _.clone()));\n    }\n    *childrenAfter(reference) {\n        const length = this._children.length;\n        for (let i = this._children.indexOf(reference) + 1; i < length; ++i) {\n            yield this._children[i];\n        }\n    }\n    *childrenBefore(reference) {\n        for (let i = this._children.indexOf(reference) - 1; i >= 0; --i) {\n            yield this._children[i];\n        }\n    }\n    *previousSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenBefore(this);\n    }\n    *nextSiblings() {\n        if (this._parent)\n            yield* this._parent.childrenAfter(this);\n    }\n    *descendants() {\n        for (const child of this._children) {\n            yield child;\n            yield* child.descendants();\n        }\n    }\n    *ancestors() {\n        if (this._parent) {\n            yield* this._parent.ancestors();\n            yield this._parent;\n        }\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=Tree.js.map","import { Tree } from \"ts-tree\";\nimport { Model } from \"./Model\";\nimport { ModelEvent } from \"./ModelEvent\";\nimport { Controller } from \"./Controller\";\n\nexport class View<V> {\n\tprivate readonly controller: Controller<V>;\n\tprivate readonly treeToHtmlEl: Map<Tree<V>, HTMLElement> = new Map();\n\tprivate readonly htmlElToTree: Map<HTMLElement, Tree<V>> = new Map();\n\tprivate cursorEl: HTMLElement | null = null;\n\n\tconstructor(\n\t\tprivate readonly model: Model<V>,\n\t\tprivate readonly valueToHtmlEl: (v: V) => Node,\n\t\tprivate readonly rootUlEl: Node\n\t) {\n\t\tthis.controller = new Controller<V>(this, model);\n\t}\n\n\tinit() {\n\t\tthis.bindModel();\n\t\tthis.bindController();\n\t}\n\n\tbindModel() {\n\t\tthis.model.subscribe(this.handleModelEvent);\n\t\tthis.model.emitAllInserts(this.handleModelEvent);\n\t}\n\n\tunbindModel() {\n\t\tthis.model.unsubscribe(this.handleModelEvent);\n\t}\n\n\tbindController() {\n\t\tthis.controller.bind();\n\t}\n\n\tunbindController() {\n\t\tthis.controller.unbind();\n\t}\n\n\tprivate handleModelEvent = (e: ModelEvent<V>) => {\n\t\tswitch (e.type) {\n\t\t\tcase \"insert\": {\n\t\t\t\tconst parentEl = this.getParentEl(e.tree);\n\t\t\t\tparentEl.insertBefore(this.createTreeEl(e.tree), this.getNextSiblingEl(e.tree));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove\": {\n\t\t\t\tthis.removeTreeEl(e.tree);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"add-to-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.add(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"remove-from-selection\": {\n\t\t\t\tthis.getHtmlEl(e.tree).classList.remove(\"selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"move-cursor\": {\n\t\t\t\tif (this.cursorEl) {\n\t\t\t\t\tthis.cursorEl.classList.remove(\"cursor\");\n\t\t\t\t}\n\t\t\t\tif (e.tree) {\n\t\t\t\t\tthis.cursorEl = this.getHtmlEl(e.tree);\n\t\t\t\t\tthis.cursorEl.classList.add(\"cursor\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.cursorEl = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate createTreeEl(tree: Tree<V>) {\n\t\tconst treeEl = document.createElement(\"li\");\n\t\ttreeEl.appendChild(this.valueToHtmlEl(tree.value));\n\t\tconst childrenContainerEl = document.createElement(\"ul\");\n\t\ttreeEl.appendChild(childrenContainerEl);\n\t\tthis.htmlElToTree.set(treeEl, tree);\n\t\tthis.treeToHtmlEl.set(tree, treeEl);\n\t\treturn treeEl;\n\t}\n\n\tprivate removeTreeEl(tree: Tree<V>) {\n\t\tconst treeEl = this.getHtmlEl(tree);\n\t\tthis.htmlElToTree.delete(treeEl);\n\t\tthis.treeToHtmlEl.delete(tree);\n\t\ttreeEl.remove();\n\t}\n\n\tprivate getNextSiblingEl(tree: Tree<V>): Node | null {\n\t\treturn tree.nextSibling ? this.getHtmlEl(tree.nextSibling) : null;\n\t}\n\n\tprivate getParentEl(tree: Tree<V>): Node {\n\t\treturn tree.parent ? this.getHtmlEl(tree.parent).childNodes[1] : this.rootUlEl;\n\t}\n\n\tgetHtmlEl(tree: Tree<V>): HTMLElement {\n\t\tconst result = this.treeToHtmlEl.get(tree);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetTree(el: HTMLElement): Tree<V> {\n\t\tconst result = this.htmlElToTree.get(el);\n\t\tif (!result) {\n\t\t\tthrow new Error(\"No such tree\");\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetTarget(e: Event): Tree<V> | undefined {\n\t\tif (e.target instanceof Node) {\n\t\t\tfor (let current: Node | null = e.target; current; current = current.parentNode) {\n\t\t\t\tif (current instanceof HTMLElement) {\n\t\t\t\t\tconst tree = this.htmlElToTree.get(current);\n\t\t\t\t\tif (tree) {\n\t\t\t\t\t\treturn tree;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import { PubSub } from \"ts-pubsub\";\nimport { Tree } from \"ts-tree\";\nimport { ModelEvent } from \"./ModelEvent\";\n\nexport class Model<V> {\n\tprivate clipboard: Tree<V>[] = [];\n\tprivate selection: Set<Tree<V>> = new Set();\n\tprivate cursor?: Tree<V>;\n\tprivate pubsub: PubSub<ModelEvent<V>> = new PubSub();\n\n\tconstructor(\n\t\tprivate root: Tree<V>,\n\t\treadonly isLeaf: (tree: Tree<V>) => boolean,\n\t\treadonly sort?: (a: V, b: V) => number\n\t) {}\n\n\tsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.subscribe(fn);\n\t}\n\n\tunsubscribe(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.pubsub.unsubscribe(fn);\n\t}\n\n\temitAllInserts(fn: (e: ModelEvent<V>) => any) {\n\t\tthis.emitTree(this.root, fn);\n\t}\n\n\tget sortedSelection() {\n\t\tconst result = [...this.selection];\n\t\tresult.sort((a, b) => a.isBefore(b));\n\t\treturn result;\n\t}\n\n\tget selectedSubtrees() {\n\t\tconst result = [];\n\t\tlet last: Tree<V> | null = null;\n\t\tfor (const node of this.sortedSelection) {\n\t\t\tif (!last || !node.isChildOf(last)) {\n\t\t\t\tresult.push(node);\n\t\t\t\tlast = node;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tisSelected(tree: Tree<V>) {\n\t\treturn this.selection.has(tree);\n\t}\n\n\tisOnlySelected(tree: Tree<V>) {\n\t\treturn this.selection.size === 1 && this.selection.has(tree);\n\t}\n\n\tselectOne(tree?: Tree<V>) {\n\t\tif (tree && this.isOnlySelected(tree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tif (!tree) {\n\t\t\tthis.ensureValidCursor();\n\t\t\treturn;\n\t\t}\n\t\tthis.addToSelection(tree);\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectPrev() {\n\t\tif (this.cursor && this.cursor.previous) {\n\t\t\tthis.selectOne(this.cursor.previous);\n\t\t}\n\t}\n\n\tselectNext() {\n\t\tif (this.cursor && this.cursor.next) {\n\t\t\tthis.selectOne(this.cursor.next);\n\t\t}\n\t}\n\n\tselectToggle(tree: Tree<V>) {\n\t\tif (this.selection.has(tree)) {\n\t\t\tthis.unselect(tree);\n\t\t} else {\n\t\t\tthis.addToSelection(tree);\n\t\t\tthis.setCursor(tree);\n\t\t}\n\t}\n\n\tselectUntil(tree: Tree<V>) {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tconst isBefore = tree.isBefore(this.cursor) < 0;\n\t\tlet current: Tree<V> | undefined = isBefore ? tree : this.cursor.next;\n\t\tconst end: Tree<V> | undefined = isBefore ? this.cursor : tree.next;\n\t\twhile (current && current !== end) {\n\t\t\tthis.addToSelection(current);\n\t\t\tcurrent = current.next;\n\t\t}\n\t\tthis.setCursor(tree);\n\t}\n\n\tselectAll() {\n\t\tfor (let current: Tree<V> | undefined = this.root; current; current = current.next) {\n\t\t\tthis.addToSelection(current);\n\t\t}\n\t}\n\n\tresetSelection() {\n\t\tfor (const node of this.selection) {\n\t\t\tthis.removeFromSelection(node);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t}\n\n\tunselect(target: Tree<V>) {\n\t\tthis.removeFromSelection(target);\n\t\tthis.ensureValidCursor();\n\t}\n\n\tcopy(): void {\n\t\tthis.clipboard = this.selectedSubtrees.map(t => t.clone());\n\t}\n\n\tpaste(): void {\n\t\tif (!this.cursor) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllIn(this.cursor, ...this.clipboard.map(t => t.clone()));\n\t}\n\n\tinsertAll(...trees: Tree<V>[]) {\n\t\tif (this.cursor) {\n\t\t\treturn this.insertAllIn(this.cursor, ...trees);\n\t\t}\n\t}\n\n\tinsertAllIn(target: Tree<V>, ...trees: Tree<V>[]) {\n\t\tconst isLeaf = this.isLeaf(target);\n\t\tconst parent = isLeaf ? target.parent : target;\n\t\tconst previousSibling = isLeaf ? target : undefined;\n\t\tif (!parent) {\n\t\t\treturn;\n\t\t}\n\t\tthis.insertAllAfter(parent, previousSibling, ...trees);\n\t}\n\n\tinsertAllAfter(parent: Tree<V>, previousSibling: Tree<V> | undefined, ...trees: Tree<V>[]) {\n\t\tfor (const tree of trees.reverse()) {\n\t\t\tthis.insertAfter(parent, previousSibling, tree);\n\t\t}\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tdelete(): void {\n\t\tfor (const tree of this.selectedSubtrees) {\n\t\t\tthis.remove(tree);\n\t\t}\n\t\tthis.ensureValidCursor();\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tsetValue(newValue: V) {\n\t\tif (this.cursor) {\n\t\t\treturn this.setValueOf(this.cursor, newValue);\n\t\t}\n\t}\n\n\tsetValueOf(tree: Tree<V>, newValue: V) {\n\t\tif (!tree.parent) {\n\t\t\treturn;\n\t\t}\n\t\ttree.value = newValue;\n\t\tthis.insertAfter(tree.parent, tree.previousSibling, tree);\n\t\tthis.pubsub.emit({ type: \"tree-change\", tree: this.root });\n\t}\n\n\tsetRoot(newRoot: Tree<V>) {\n\t\tthis.remove(this.root);\n\t\tthis.root = newRoot;\n\t\tthis.emitTree(newRoot);\n\t\tthis.ensureValidCursor();\n\t}\n\n\tprivate insertAfter(parent: Tree<V>, reference: Tree<V> | undefined, tree: Tree<V>) {\n\t\tif (tree.root === this.root) {\n\t\t\tthis.remove(tree);\n\t\t}\n\t\tif (this.sort) {\n\t\t\tconst sort = this.sort; // TS hack\n\t\t\tconst firstLarger = parent.children.find(child => sort(child.value, tree.value) > 0);\n\t\t\tparent.insertBefore(firstLarger, tree);\n\t\t} else {\n\t\t\tparent.insertAfter(reference, tree);\n\t\t}\n\t\tthis.pubsub.emit({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild);\n\t}\n\n\tprivate remove(tree: Tree<V>) {\n\t\tthis.removeFromSelection(tree);\n\t\ttree.remove();\n\t\tthis.pubsub.emit({ type: \"remove\", tree });\n\t}\n\n\tprivate addToSelection(tree: Tree<V>) {\n\t\tif (!this.selection.has(tree)) {\n\t\t\tthis.selection.add(tree);\n\t\t\tthis.pubsub.emit({ type: \"add-to-selection\", tree });\n\t\t}\n\t}\n\n\tprivate removeFromSelection(tree: Tree<V>) {\n\t\tif (this.selection.delete(tree)) {\n\t\t\tthis.pubsub.emit({ type: \"remove-from-selection\", tree });\n\t\t}\n\t}\n\n\tprivate setCursor(tree?: Tree<V>) {\n\t\tif (tree !== this.cursor) {\n\t\t\tthis.pubsub.emit({ type: \"move-cursor\", tree });\n\t\t}\n\t\tthis.cursor = tree;\n\t}\n\n\tprivate ensureValidCursor() {\n\t\tif (this.cursor && this.cursor.root !== this.root) {\n\t\t\tconst first = this.selection.values().next();\n\t\t\tthis.setCursor(first.done ? undefined : first.value);\n\t\t} else {\n\t\t\tthis.setCursor(undefined);\n\t\t}\n\t}\n\n\tprivate emitTree(\n\t\ttree?: Tree<V>,\n\t\tfn: (e: ModelEvent<V>) => any = this.pubsub.emit.bind(this.pubsub)\n\t) {\n\t\tif (!tree) {\n\t\t\treturn;\n\t\t}\n\t\tthis.emitTree(tree.nextSibling, fn);\n\t\tfn({ type: \"insert\", tree });\n\t\tthis.emitTree(tree.firstChild, fn);\n\t}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass PubSub {\n    constructor() {\n        this.handlers = new Set();\n    }\n    subscribe(fn) {\n        this.handlers.add(fn);\n    }\n    unsubscribe(fn) {\n        this.handlers.delete(fn);\n    }\n    emit(event) {\n        for (const fn of this.handlers) {\n            fn(event);\n        }\n    }\n}\nexports.PubSub = PubSub;\n//# sourceMappingURL=PubSub.js.map","import { View } from \"./View\";\nimport { Model } from \"./Model\";\nimport { Tree } from \"ts-tree\";\n\nconst isBrowser = typeof navigator === \"undefined\";\nconst isMac = isBrowser ? false : navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n\nexport class Controller<V> {\n\tconstructor(readonly view: View<V>, readonly model: Model<V>) {}\n\tprivate mirrorEl?: HTMLElement;\n\tprivate clickedEl?: HTMLElement;\n\tprivate dragoverTree?: Tree<V>;\n\n\tpublic bind() {\n\t\tdocument.addEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.addEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.addEventListener(\"click\", this.handleClickEvent);\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.addEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.addEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.addEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tpublic unbind() {\n\t\tdocument.removeEventListener(\"mousedown\", this.handleMousedownEvent);\n\t\tdocument.removeEventListener(\"mouseup\", this.handleMouseupEvent);\n\t\tdocument.removeEventListener(\"click\", this.handleClickEvent);\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyboardEvent);\n\t\tdocument.removeEventListener(\"dragstart\", this.handleDragstartEvent);\n\t\tdocument.removeEventListener(\"dragenter\", this.handleDragenterEvent);\n\t\tdocument.removeEventListener(\"dragend\", this.handleDragendEvent);\n\t}\n\n\tprivate handleMousedownEvent = (e: MouseEvent) => {\n\t\tconst targetTree = this.view.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tthis.clickedEl = this.view.getHtmlEl(targetTree);\n\t\t\tthis.clickedEl.setAttribute(\"draggable\", \"true\");\n\n\t\t\t// If ctrl+shift are pressed, then default to calling it a ctrl\n\t\t\t// (MS defaults to shift, Dropbox to ctrl).\n\t\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t\tthis.model.selectToggle(targetTree);\n\t\t\t} else if (e.shiftKey) {\n\t\t\t\tthis.model.selectUntil(targetTree);\n\t\t\t} else {\n\t\t\t\tif (!this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleMouseupEvent = (e: MouseEvent) => {\n\t\tif (this.clickedEl) {\n\t\t\tthis.clickedEl.removeAttribute(\"draggable\");\n\t\t}\n\t\tconst targetTree = this.view.getTarget(e);\n\t\tif (targetTree) {\n\t\t\tif (!e.ctrlKey && !e.metaKey && !e.shiftKey) {\n\t\t\t\tif (this.model.isSelected(targetTree)) {\n\t\t\t\t\tthis.model.selectOne(targetTree);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleClickEvent = (e: MouseEvent) => {\n\t\tif (!this.view.getTarget(e)) {\n\t\t\tthis.model.resetSelection();\n\t\t}\n\t};\n\n\tprivate handleKeyboardEvent = (e: KeyboardEvent) => {\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"a\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectAll();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.copy();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.paste();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (e.key) {\n\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectPrev();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.selectNext();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.view.getHtmlEl(tree).classList.remove(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tfor (const tree of this.model.selectedSubtrees) {\n\t\t\t\t\t\tthis.view.getHtmlEl(tree).classList.add(\"closed\");\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Delete\":\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.model.delete();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Backspace\":\n\t\t\t\t\tif (isMac) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis.model.delete();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate handleDragstartEvent = (e: DragEvent) => {\n\t\te.dataTransfer.setData(\"text/html\", \"\");\n\t\te.dataTransfer.dropEffect = \"move\";\n\n\t\tconst target = this.view.getTarget(e);\n\t\tif (!target) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mirrorEl = document.createElement(\"ul\");\n\t\tthis.mirrorEl.classList.add(\"mirror\");\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tconst subtreeEl = this.view.getHtmlEl(subtree);\n\t\t\tthis.mirrorEl.appendChild(subtreeEl.cloneNode(true));\n\t\t}\n\t\tdocument.body.appendChild(this.mirrorEl);\n\t\te.dataTransfer.setDragImage(this.mirrorEl, 0, 0);\n\t};\n\n\tprivate handleDragenterEvent = (e: DragEvent) => {\n\t\tconst targetTree = this.view.getTarget(e);\n\t\tif (this.dragoverTree) {\n\t\t\tthis.view.getHtmlEl(this.dragoverTree).classList.remove(\"over\");\n\t\t\tthis.dragoverTree = undefined;\n\t\t}\n\t\tif (!targetTree || this.model.isLeaf(targetTree)) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const subtree of this.model.selectedSubtrees) {\n\t\t\tif (targetTree === subtree || targetTree.isChildOf(subtree)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.view.getHtmlEl(targetTree).classList.add(\"over\");\n\t\tthis.dragoverTree = targetTree;\n\t};\n\n\tprivate handleDragendEvent = (e: DragEvent) => {\n\t\tif (this.mirrorEl) {\n\t\t\tthis.mirrorEl.remove();\n\t\t}\n\t\tif (this.dragoverTree) {\n\t\t\tthis.model.insertAllIn(this.dragoverTree, ...this.model.selectedSubtrees);\n\t\t\tthis.view.getHtmlEl(this.dragoverTree).classList.remove(\"over\");\n\t\t\tthis.dragoverTree = undefined;\n\t\t}\n\t};\n}\n"],"sourceRoot":""}